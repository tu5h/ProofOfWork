import { ServiceType } from "@protobuf-ts/runtime-rpc";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * Parameters to the node health query. The default message gives a good
 * default.
 *
 * @generated from protobuf message concordium.health.NodeHealthRequest
 */
export interface NodeHealthRequest {
}
/**
 * Response to the health check. A return code of "OK" is used for success, and
 * errors are handled via RPC status codes
 *
 * @generated from protobuf message concordium.health.NodeHealthResponse
 */
export interface NodeHealthResponse {
}
declare class NodeHealthRequest$Type extends MessageType<NodeHealthRequest> {
    constructor();
}
/**
 * @generated MessageType for protobuf message concordium.health.NodeHealthRequest
 */
export declare const NodeHealthRequest: NodeHealthRequest$Type;
declare class NodeHealthResponse$Type extends MessageType<NodeHealthResponse> {
    constructor();
}
/**
 * @generated MessageType for protobuf message concordium.health.NodeHealthResponse
 */
export declare const NodeHealthResponse: NodeHealthResponse$Type;
/**
 * @generated ServiceType for protobuf service concordium.health.Health
 */
export declare const Health: ServiceType;
export {};
