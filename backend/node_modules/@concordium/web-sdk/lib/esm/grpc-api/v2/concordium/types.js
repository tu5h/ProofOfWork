// @generated by protobuf-ts 2.9.1 with parameter optimize_code_size
// @generated from protobuf file "v2/concordium/types.proto" (package "concordium.v2", syntax proto3)
// tslint:disable
import { MessageType } from "@protobuf-ts/runtime";
/**
 * The status of a cooldown. When stake is removed from a baker or delegator
 * (from protocol version 7) it first enters the pre-pre-cooldown state.
 * The next time the stake snaphot is taken (at the epoch transition before
 * a payday) it enters the pre-cooldown state. At the subsequent payday, it
 * enters the cooldown state. At the payday after the end of the cooldown
 * period, the stake is finally released.
 *
 * @generated from protobuf enum concordium.v2.Cooldown.CooldownStatus
 */
export var Cooldown_CooldownStatus;
(function (Cooldown_CooldownStatus) {
    /**
     * The amount is in cooldown and will expire at the specified time, becoming available
     * at the subsequent pay day.
     *
     * @generated from protobuf enum value: COOLDOWN = 0;
     */
    Cooldown_CooldownStatus[Cooldown_CooldownStatus["COOLDOWN"] = 0] = "COOLDOWN";
    /**
     * The amount will enter cooldown at the next pay day. The specified end time is
     * projected to be the end of the cooldown period, but the actual end time will be
     * determined at the payday, and may be different if the global cooldown period
     * changes.
     *
     * @generated from protobuf enum value: PRE_COOLDOWN = 1;
     */
    Cooldown_CooldownStatus[Cooldown_CooldownStatus["PRE_COOLDOWN"] = 1] = "PRE_COOLDOWN";
    /**
     * The amount will enter pre-cooldown at the next snapshot epoch (i.e. the epoch
     * transition before a pay day transition). As with pre-cooldown, the specified
     * end time is projected, but the actual end time will be determined later.
     *
     * @generated from protobuf enum value: PRE_PRE_COOLDOWN = 2;
     */
    Cooldown_CooldownStatus[Cooldown_CooldownStatus["PRE_PRE_COOLDOWN"] = 2] = "PRE_PRE_COOLDOWN";
})(Cooldown_CooldownStatus || (Cooldown_CooldownStatus = {}));
/**
 * @generated from protobuf enum concordium.v2.PeersInfo.Peer.CatchupStatus
 */
export var PeersInfo_Peer_CatchupStatus;
(function (PeersInfo_Peer_CatchupStatus) {
    /**
     * The peer does not have any data unknown to us. If we receive a message from the
     * peer that refers to unknown data (e.g., an unknown block) the peer is marked as pending.
     *
     * @generated from protobuf enum value: UPTODATE = 0;
     */
    PeersInfo_Peer_CatchupStatus[PeersInfo_Peer_CatchupStatus["UPTODATE"] = 0] = "UPTODATE";
    /**
     * The peer might have some data unknown to us. A peer can be in this state either because
     * it sent a message that refers to data unknown to us, or before we have established a baseline with it.
     * The latter happens during node startup, as well as upon protocol updates until the initial catchup handshake
     * completes.
     *
     * @generated from protobuf enum value: PENDING = 1;
     */
    PeersInfo_Peer_CatchupStatus[PeersInfo_Peer_CatchupStatus["PENDING"] = 1] = "PENDING";
    /**
     * The node is currently catching up by requesting blocks from this peer.
     * There will be at most one peer with this status at a time.
     * Once the peer has responded to the request, its status will be changed to:
     * - 'UPTODATE' if the peer has no more data that is not known to us
     * - 'PENDING' if the node has more data that is unknown to us.
     *
     * @generated from protobuf enum value: CATCHINGUP = 2;
     */
    PeersInfo_Peer_CatchupStatus[PeersInfo_Peer_CatchupStatus["CATCHINGUP"] = 2] = "CATCHINGUP";
})(PeersInfo_Peer_CatchupStatus || (PeersInfo_Peer_CatchupStatus = {}));
/**
 * The committee information of a node configured with
 * baker keys but somehow the node is _not_ part of the
 * current baking committee.
 *
 * @generated from protobuf enum concordium.v2.NodeInfo.BakerConsensusInfo.PassiveCommitteeInfo
 */
export var NodeInfo_BakerConsensusInfo_PassiveCommitteeInfo;
(function (NodeInfo_BakerConsensusInfo_PassiveCommitteeInfo) {
    /**
     * The node is started with baker keys however it is currently not in the baking committee.
     * The node is __not__ baking.
     *
     * @generated from protobuf enum value: NOT_IN_COMMITTEE = 0;
     */
    NodeInfo_BakerConsensusInfo_PassiveCommitteeInfo[NodeInfo_BakerConsensusInfo_PassiveCommitteeInfo["NOT_IN_COMMITTEE"] = 0] = "NOT_IN_COMMITTEE";
    /**
     * The account is registered as a baker but not in the current `Epoch`.
     * The node is __not__ baking.
     *
     * @generated from protobuf enum value: ADDED_BUT_NOT_ACTIVE_IN_COMMITTEE = 1;
     */
    NodeInfo_BakerConsensusInfo_PassiveCommitteeInfo[NodeInfo_BakerConsensusInfo_PassiveCommitteeInfo["ADDED_BUT_NOT_ACTIVE_IN_COMMITTEE"] = 1] = "ADDED_BUT_NOT_ACTIVE_IN_COMMITTEE";
    /**
     * The node has configured invalid baker keys i.e., the configured
     * baker keys do not match the current keys on the baker account.
     * The node is __not__ baking.
     *
     * @generated from protobuf enum value: ADDED_BUT_WRONG_KEYS = 2;
     */
    NodeInfo_BakerConsensusInfo_PassiveCommitteeInfo[NodeInfo_BakerConsensusInfo_PassiveCommitteeInfo["ADDED_BUT_WRONG_KEYS"] = 2] = "ADDED_BUT_WRONG_KEYS";
})(NodeInfo_BakerConsensusInfo_PassiveCommitteeInfo || (NodeInfo_BakerConsensusInfo_PassiveCommitteeInfo = {}));
/**
 * Information about how open the pool is to new delegators.
 *
 * @generated from protobuf enum concordium.v2.OpenStatus
 */
export var OpenStatus;
(function (OpenStatus) {
    /**
     * @generated from protobuf enum value: OPEN_STATUS_OPEN_FOR_ALL = 0;
     */
    OpenStatus[OpenStatus["OPEN_FOR_ALL"] = 0] = "OPEN_FOR_ALL";
    /**
     * @generated from protobuf enum value: OPEN_STATUS_CLOSED_FOR_NEW = 1;
     */
    OpenStatus[OpenStatus["CLOSED_FOR_NEW"] = 1] = "CLOSED_FOR_NEW";
    /**
     * @generated from protobuf enum value: OPEN_STATUS_CLOSED_FOR_ALL = 2;
     */
    OpenStatus[OpenStatus["CLOSED_FOR_ALL"] = 2] = "CLOSED_FOR_ALL";
})(OpenStatus || (OpenStatus = {}));
/**
 * Version of smart contract.
 *
 * @generated from protobuf enum concordium.v2.ContractVersion
 */
export var ContractVersion;
(function (ContractVersion) {
    /**
     * @generated from protobuf enum value: V0 = 0;
     */
    ContractVersion[ContractVersion["V0"] = 0] = "V0";
    /**
     * @generated from protobuf enum value: V1 = 1;
     */
    ContractVersion[ContractVersion["V1"] = 1] = "V1";
})(ContractVersion || (ContractVersion = {}));
/**
 * The type of a credential.
 *
 * @generated from protobuf enum concordium.v2.CredentialType
 */
export var CredentialType;
(function (CredentialType) {
    /**
     * An initial credential created by the identity provider.
     *
     * @generated from protobuf enum value: CREDENTIAL_TYPE_INITIAL = 0;
     */
    CredentialType[CredentialType["INITIAL"] = 0] = "INITIAL";
    /**
     * A normal credential type created by the account.
     *
     * @generated from protobuf enum value: CREDENTIAL_TYPE_NORMAL = 1;
     */
    CredentialType[CredentialType["NORMAL"] = 1] = "NORMAL";
})(CredentialType || (CredentialType = {}));
/**
 * The type of chain update.
 *
 * @generated from protobuf enum concordium.v2.UpdateType
 */
export var UpdateType;
(function (UpdateType) {
    /**
     * @generated from protobuf enum value: UPDATE_PROTOCOL = 0;
     */
    UpdateType[UpdateType["UPDATE_PROTOCOL"] = 0] = "UPDATE_PROTOCOL";
    /**
     * @generated from protobuf enum value: UPDATE_ELECTION_DIFFICULTY = 1;
     */
    UpdateType[UpdateType["UPDATE_ELECTION_DIFFICULTY"] = 1] = "UPDATE_ELECTION_DIFFICULTY";
    /**
     * @generated from protobuf enum value: UPDATE_EURO_PER_ENERGY = 2;
     */
    UpdateType[UpdateType["UPDATE_EURO_PER_ENERGY"] = 2] = "UPDATE_EURO_PER_ENERGY";
    /**
     * @generated from protobuf enum value: UPDATE_MICRO_CCD_PER_EURO = 3;
     */
    UpdateType[UpdateType["UPDATE_MICRO_CCD_PER_EURO"] = 3] = "UPDATE_MICRO_CCD_PER_EURO";
    /**
     * @generated from protobuf enum value: UPDATE_FOUNDATION_ACCOUNT = 4;
     */
    UpdateType[UpdateType["UPDATE_FOUNDATION_ACCOUNT"] = 4] = "UPDATE_FOUNDATION_ACCOUNT";
    /**
     * @generated from protobuf enum value: UPDATE_MINT_DISTRIBUTION = 5;
     */
    UpdateType[UpdateType["UPDATE_MINT_DISTRIBUTION"] = 5] = "UPDATE_MINT_DISTRIBUTION";
    /**
     * @generated from protobuf enum value: UPDATE_TRANSACTION_FEE_DISTRIBUTION = 6;
     */
    UpdateType[UpdateType["UPDATE_TRANSACTION_FEE_DISTRIBUTION"] = 6] = "UPDATE_TRANSACTION_FEE_DISTRIBUTION";
    /**
     * @generated from protobuf enum value: UPDATE_GAS_REWARDS = 7;
     */
    UpdateType[UpdateType["UPDATE_GAS_REWARDS"] = 7] = "UPDATE_GAS_REWARDS";
    /**
     * @generated from protobuf enum value: UPDATE_POOL_PARAMETERS = 8;
     */
    UpdateType[UpdateType["UPDATE_POOL_PARAMETERS"] = 8] = "UPDATE_POOL_PARAMETERS";
    /**
     * @generated from protobuf enum value: ADD_ANONYMITY_REVOKER = 9;
     */
    UpdateType[UpdateType["ADD_ANONYMITY_REVOKER"] = 9] = "ADD_ANONYMITY_REVOKER";
    /**
     * @generated from protobuf enum value: ADD_IDENTITY_PROVIDER = 10;
     */
    UpdateType[UpdateType["ADD_IDENTITY_PROVIDER"] = 10] = "ADD_IDENTITY_PROVIDER";
    /**
     * @generated from protobuf enum value: UPDATE_ROOT_KEYS = 11;
     */
    UpdateType[UpdateType["UPDATE_ROOT_KEYS"] = 11] = "UPDATE_ROOT_KEYS";
    /**
     * @generated from protobuf enum value: UPDATE_LEVEL1_KEYS = 12;
     */
    UpdateType[UpdateType["UPDATE_LEVEL1_KEYS"] = 12] = "UPDATE_LEVEL1_KEYS";
    /**
     * @generated from protobuf enum value: UPDATE_LEVEL2_KEYS = 13;
     */
    UpdateType[UpdateType["UPDATE_LEVEL2_KEYS"] = 13] = "UPDATE_LEVEL2_KEYS";
    /**
     * @generated from protobuf enum value: UPDATE_COOLDOWN_PARAMETERS = 14;
     */
    UpdateType[UpdateType["UPDATE_COOLDOWN_PARAMETERS"] = 14] = "UPDATE_COOLDOWN_PARAMETERS";
    /**
     * @generated from protobuf enum value: UPDATE_TIME_PARAMETERS = 15;
     */
    UpdateType[UpdateType["UPDATE_TIME_PARAMETERS"] = 15] = "UPDATE_TIME_PARAMETERS";
    /**
     * @generated from protobuf enum value: UPDATE_TIMEOUT_PARAMETERS = 16;
     */
    UpdateType[UpdateType["UPDATE_TIMEOUT_PARAMETERS"] = 16] = "UPDATE_TIMEOUT_PARAMETERS";
    /**
     * @generated from protobuf enum value: UPDATE_MIN_BLOCK_TIME = 17;
     */
    UpdateType[UpdateType["UPDATE_MIN_BLOCK_TIME"] = 17] = "UPDATE_MIN_BLOCK_TIME";
    /**
     * @generated from protobuf enum value: UPDATE_BLOCK_ENERGY_LIMIT = 18;
     */
    UpdateType[UpdateType["UPDATE_BLOCK_ENERGY_LIMIT"] = 18] = "UPDATE_BLOCK_ENERGY_LIMIT";
    /**
     * @generated from protobuf enum value: UPDATE_FINALIZATION_COMMITTEE_PARAMETERS = 19;
     */
    UpdateType[UpdateType["UPDATE_FINALIZATION_COMMITTEE_PARAMETERS"] = 19] = "UPDATE_FINALIZATION_COMMITTEE_PARAMETERS";
})(UpdateType || (UpdateType = {}));
/**
 * The type of transaction.
 *
 * @generated from protobuf enum concordium.v2.TransactionType
 */
export var TransactionType;
(function (TransactionType) {
    /**
     * @generated from protobuf enum value: DEPLOY_MODULE = 0;
     */
    TransactionType[TransactionType["DEPLOY_MODULE"] = 0] = "DEPLOY_MODULE";
    /**
     * @generated from protobuf enum value: INIT_CONTRACT = 1;
     */
    TransactionType[TransactionType["INIT_CONTRACT"] = 1] = "INIT_CONTRACT";
    /**
     * @generated from protobuf enum value: UPDATE = 2;
     */
    TransactionType[TransactionType["UPDATE"] = 2] = "UPDATE";
    /**
     * @generated from protobuf enum value: TRANSFER = 3;
     */
    TransactionType[TransactionType["TRANSFER"] = 3] = "TRANSFER";
    /**
     * @generated from protobuf enum value: ADD_BAKER = 4;
     */
    TransactionType[TransactionType["ADD_BAKER"] = 4] = "ADD_BAKER";
    /**
     * @generated from protobuf enum value: REMOVE_BAKER = 5;
     */
    TransactionType[TransactionType["REMOVE_BAKER"] = 5] = "REMOVE_BAKER";
    /**
     * @generated from protobuf enum value: UPDATE_BAKER_STAKE = 6;
     */
    TransactionType[TransactionType["UPDATE_BAKER_STAKE"] = 6] = "UPDATE_BAKER_STAKE";
    /**
     * @generated from protobuf enum value: UPDATE_BAKER_RESTAKE_EARNINGS = 7;
     */
    TransactionType[TransactionType["UPDATE_BAKER_RESTAKE_EARNINGS"] = 7] = "UPDATE_BAKER_RESTAKE_EARNINGS";
    /**
     * @generated from protobuf enum value: UPDATE_BAKER_KEYS = 8;
     */
    TransactionType[TransactionType["UPDATE_BAKER_KEYS"] = 8] = "UPDATE_BAKER_KEYS";
    /**
     * @generated from protobuf enum value: UPDATE_CREDENTIAL_KEYS = 9;
     */
    TransactionType[TransactionType["UPDATE_CREDENTIAL_KEYS"] = 9] = "UPDATE_CREDENTIAL_KEYS";
    /**
     * @generated from protobuf enum value: ENCRYPTED_AMOUNT_TRANSFER = 10;
     */
    TransactionType[TransactionType["ENCRYPTED_AMOUNT_TRANSFER"] = 10] = "ENCRYPTED_AMOUNT_TRANSFER";
    /**
     * @generated from protobuf enum value: TRANSFER_TO_ENCRYPTED = 11;
     */
    TransactionType[TransactionType["TRANSFER_TO_ENCRYPTED"] = 11] = "TRANSFER_TO_ENCRYPTED";
    /**
     * @generated from protobuf enum value: TRANSFER_TO_PUBLIC = 12;
     */
    TransactionType[TransactionType["TRANSFER_TO_PUBLIC"] = 12] = "TRANSFER_TO_PUBLIC";
    /**
     * @generated from protobuf enum value: TRANSFER_WITH_SCHEDULE = 13;
     */
    TransactionType[TransactionType["TRANSFER_WITH_SCHEDULE"] = 13] = "TRANSFER_WITH_SCHEDULE";
    /**
     * @generated from protobuf enum value: UPDATE_CREDENTIALS = 14;
     */
    TransactionType[TransactionType["UPDATE_CREDENTIALS"] = 14] = "UPDATE_CREDENTIALS";
    /**
     * @generated from protobuf enum value: REGISTER_DATA = 15;
     */
    TransactionType[TransactionType["REGISTER_DATA"] = 15] = "REGISTER_DATA";
    /**
     * @generated from protobuf enum value: TRANSFER_WITH_MEMO = 16;
     */
    TransactionType[TransactionType["TRANSFER_WITH_MEMO"] = 16] = "TRANSFER_WITH_MEMO";
    /**
     * @generated from protobuf enum value: ENCRYPTED_AMOUNT_TRANSFER_WITH_MEMO = 17;
     */
    TransactionType[TransactionType["ENCRYPTED_AMOUNT_TRANSFER_WITH_MEMO"] = 17] = "ENCRYPTED_AMOUNT_TRANSFER_WITH_MEMO";
    /**
     * @generated from protobuf enum value: TRANSFER_WITH_SCHEDULE_AND_MEMO = 18;
     */
    TransactionType[TransactionType["TRANSFER_WITH_SCHEDULE_AND_MEMO"] = 18] = "TRANSFER_WITH_SCHEDULE_AND_MEMO";
    /**
     * @generated from protobuf enum value: CONFIGURE_BAKER = 19;
     */
    TransactionType[TransactionType["CONFIGURE_BAKER"] = 19] = "CONFIGURE_BAKER";
    /**
     * @generated from protobuf enum value: CONFIGURE_DELEGATION = 20;
     */
    TransactionType[TransactionType["CONFIGURE_DELEGATION"] = 20] = "CONFIGURE_DELEGATION";
})(TransactionType || (TransactionType = {}));
/**
 * The different versions of the protocol.
 *
 * @generated from protobuf enum concordium.v2.ProtocolVersion
 */
export var ProtocolVersion;
(function (ProtocolVersion) {
    /**
     * @generated from protobuf enum value: PROTOCOL_VERSION_1 = 0;
     */
    ProtocolVersion[ProtocolVersion["PROTOCOL_VERSION_1"] = 0] = "PROTOCOL_VERSION_1";
    /**
     * @generated from protobuf enum value: PROTOCOL_VERSION_2 = 1;
     */
    ProtocolVersion[ProtocolVersion["PROTOCOL_VERSION_2"] = 1] = "PROTOCOL_VERSION_2";
    /**
     * @generated from protobuf enum value: PROTOCOL_VERSION_3 = 2;
     */
    ProtocolVersion[ProtocolVersion["PROTOCOL_VERSION_3"] = 2] = "PROTOCOL_VERSION_3";
    /**
     * @generated from protobuf enum value: PROTOCOL_VERSION_4 = 3;
     */
    ProtocolVersion[ProtocolVersion["PROTOCOL_VERSION_4"] = 3] = "PROTOCOL_VERSION_4";
    /**
     * @generated from protobuf enum value: PROTOCOL_VERSION_5 = 4;
     */
    ProtocolVersion[ProtocolVersion["PROTOCOL_VERSION_5"] = 4] = "PROTOCOL_VERSION_5";
    /**
     * @generated from protobuf enum value: PROTOCOL_VERSION_6 = 5;
     */
    ProtocolVersion[ProtocolVersion["PROTOCOL_VERSION_6"] = 5] = "PROTOCOL_VERSION_6";
    /**
     * @generated from protobuf enum value: PROTOCOL_VERSION_7 = 6;
     */
    ProtocolVersion[ProtocolVersion["PROTOCOL_VERSION_7"] = 6] = "PROTOCOL_VERSION_7";
})(ProtocolVersion || (ProtocolVersion = {}));
// @generated message type with reflection information, may provide speed optimized methods
class Empty$Type extends MessageType {
    constructor() {
        super("concordium.v2.Empty", []);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.Empty
 */
export const Empty = new Empty$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BlockHash$Type extends MessageType {
    constructor() {
        super("concordium.v2.BlockHash", [
            { no: 1, name: "value", kind: "scalar", T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.BlockHash
 */
export const BlockHash = new BlockHash$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Sha256Hash$Type extends MessageType {
    constructor() {
        super("concordium.v2.Sha256Hash", [
            { no: 1, name: "value", kind: "scalar", T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.Sha256Hash
 */
export const Sha256Hash = new Sha256Hash$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TransactionHash$Type extends MessageType {
    constructor() {
        super("concordium.v2.TransactionHash", [
            { no: 1, name: "value", kind: "scalar", T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.TransactionHash
 */
export const TransactionHash = new TransactionHash$Type();
// @generated message type with reflection information, may provide speed optimized methods
class StateHash$Type extends MessageType {
    constructor() {
        super("concordium.v2.StateHash", [
            { no: 1, name: "value", kind: "scalar", T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.StateHash
 */
export const StateHash = new StateHash$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AbsoluteBlockHeight$Type extends MessageType {
    constructor() {
        super("concordium.v2.AbsoluteBlockHeight", [
            { no: 1, name: "value", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.AbsoluteBlockHeight
 */
export const AbsoluteBlockHeight = new AbsoluteBlockHeight$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BlockHeight$Type extends MessageType {
    constructor() {
        super("concordium.v2.BlockHeight", [
            { no: 1, name: "value", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.BlockHeight
 */
export const BlockHeight = new BlockHeight$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BakerId$Type extends MessageType {
    constructor() {
        super("concordium.v2.BakerId", [
            { no: 1, name: "value", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.BakerId
 */
export const BakerId = new BakerId$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AccountIndex$Type extends MessageType {
    constructor() {
        super("concordium.v2.AccountIndex", [
            { no: 1, name: "value", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.AccountIndex
 */
export const AccountIndex = new AccountIndex$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ModuleRef$Type extends MessageType {
    constructor() {
        super("concordium.v2.ModuleRef", [
            { no: 1, name: "value", kind: "scalar", T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.ModuleRef
 */
export const ModuleRef = new ModuleRef$Type();
// @generated message type with reflection information, may provide speed optimized methods
class VersionedModuleSource$Type extends MessageType {
    constructor() {
        super("concordium.v2.VersionedModuleSource", [
            { no: 1, name: "v0", kind: "message", oneof: "module", T: () => VersionedModuleSource_ModuleSourceV0 },
            { no: 2, name: "v1", kind: "message", oneof: "module", T: () => VersionedModuleSource_ModuleSourceV1 }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.VersionedModuleSource
 */
export const VersionedModuleSource = new VersionedModuleSource$Type();
// @generated message type with reflection information, may provide speed optimized methods
class VersionedModuleSource_ModuleSourceV0$Type extends MessageType {
    constructor() {
        super("concordium.v2.VersionedModuleSource.ModuleSourceV0", [
            { no: 1, name: "value", kind: "scalar", T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.VersionedModuleSource.ModuleSourceV0
 */
export const VersionedModuleSource_ModuleSourceV0 = new VersionedModuleSource_ModuleSourceV0$Type();
// @generated message type with reflection information, may provide speed optimized methods
class VersionedModuleSource_ModuleSourceV1$Type extends MessageType {
    constructor() {
        super("concordium.v2.VersionedModuleSource.ModuleSourceV1", [
            { no: 1, name: "value", kind: "scalar", T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.VersionedModuleSource.ModuleSourceV1
 */
export const VersionedModuleSource_ModuleSourceV1 = new VersionedModuleSource_ModuleSourceV1$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Timestamp$Type extends MessageType {
    constructor() {
        super("concordium.v2.Timestamp", [
            { no: 1, name: "value", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.Timestamp
 */
export const Timestamp = new Timestamp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Release$Type extends MessageType {
    constructor() {
        super("concordium.v2.Release", [
            { no: 1, name: "timestamp", kind: "message", T: () => Timestamp },
            { no: 2, name: "amount", kind: "message", T: () => Amount },
            { no: 3, name: "transactions", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => TransactionHash }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.Release
 */
export const Release = new Release$Type();
// @generated message type with reflection information, may provide speed optimized methods
class NewRelease$Type extends MessageType {
    constructor() {
        super("concordium.v2.NewRelease", [
            { no: 1, name: "timestamp", kind: "message", T: () => Timestamp },
            { no: 2, name: "amount", kind: "message", T: () => Amount }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.NewRelease
 */
export const NewRelease = new NewRelease$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ReleaseSchedule$Type extends MessageType {
    constructor() {
        super("concordium.v2.ReleaseSchedule", [
            { no: 1, name: "total", kind: "message", T: () => Amount },
            { no: 2, name: "schedules", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Release }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.ReleaseSchedule
 */
export const ReleaseSchedule = new ReleaseSchedule$Type();
// @generated message type with reflection information, may provide speed optimized methods
class EncryptedAmount$Type extends MessageType {
    constructor() {
        super("concordium.v2.EncryptedAmount", [
            { no: 1, name: "value", kind: "scalar", T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.EncryptedAmount
 */
export const EncryptedAmount = new EncryptedAmount$Type();
// @generated message type with reflection information, may provide speed optimized methods
class EncryptedBalance$Type extends MessageType {
    constructor() {
        super("concordium.v2.EncryptedBalance", [
            { no: 1, name: "self_amount", kind: "message", T: () => EncryptedAmount },
            { no: 2, name: "start_index", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 3, name: "aggregated_amount", kind: "message", T: () => EncryptedAmount },
            { no: 4, name: "num_aggregated", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 5, name: "incoming_amounts", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => EncryptedAmount }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.EncryptedBalance
 */
export const EncryptedBalance = new EncryptedBalance$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DelegationTarget$Type extends MessageType {
    constructor() {
        super("concordium.v2.DelegationTarget", [
            { no: 1, name: "passive", kind: "message", oneof: "target", T: () => Empty },
            { no: 2, name: "baker", kind: "message", oneof: "target", T: () => BakerId }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.DelegationTarget
 */
export const DelegationTarget = new DelegationTarget$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BakerElectionVerifyKey$Type extends MessageType {
    constructor() {
        super("concordium.v2.BakerElectionVerifyKey", [
            { no: 1, name: "value", kind: "scalar", T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.BakerElectionVerifyKey
 */
export const BakerElectionVerifyKey = new BakerElectionVerifyKey$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BakerSignatureVerifyKey$Type extends MessageType {
    constructor() {
        super("concordium.v2.BakerSignatureVerifyKey", [
            { no: 1, name: "value", kind: "scalar", T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.BakerSignatureVerifyKey
 */
export const BakerSignatureVerifyKey = new BakerSignatureVerifyKey$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BakerAggregationVerifyKey$Type extends MessageType {
    constructor() {
        super("concordium.v2.BakerAggregationVerifyKey", [
            { no: 1, name: "value", kind: "scalar", T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.BakerAggregationVerifyKey
 */
export const BakerAggregationVerifyKey = new BakerAggregationVerifyKey$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BakerInfo$Type extends MessageType {
    constructor() {
        super("concordium.v2.BakerInfo", [
            { no: 1, name: "baker_id", kind: "message", T: () => BakerId },
            { no: 2, name: "election_key", kind: "message", T: () => BakerElectionVerifyKey },
            { no: 3, name: "signature_key", kind: "message", T: () => BakerSignatureVerifyKey },
            { no: 4, name: "aggregation_key", kind: "message", T: () => BakerAggregationVerifyKey }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.BakerInfo
 */
export const BakerInfo = new BakerInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class StakePendingChange$Type extends MessageType {
    constructor() {
        super("concordium.v2.StakePendingChange", [
            { no: 1, name: "reduce", kind: "message", oneof: "change", T: () => StakePendingChange_Reduce },
            { no: 2, name: "remove", kind: "message", oneof: "change", T: () => Timestamp }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.StakePendingChange
 */
export const StakePendingChange = new StakePendingChange$Type();
// @generated message type with reflection information, may provide speed optimized methods
class StakePendingChange_Reduce$Type extends MessageType {
    constructor() {
        super("concordium.v2.StakePendingChange.Reduce", [
            { no: 1, name: "new_stake", kind: "message", T: () => Amount },
            { no: 2, name: "effective_time", kind: "message", T: () => Timestamp }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.StakePendingChange.Reduce
 */
export const StakePendingChange_Reduce = new StakePendingChange_Reduce$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AmountFraction$Type extends MessageType {
    constructor() {
        super("concordium.v2.AmountFraction", [
            { no: 1, name: "parts_per_hundred_thousand", kind: "scalar", T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.AmountFraction
 */
export const AmountFraction = new AmountFraction$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CommissionRates$Type extends MessageType {
    constructor() {
        super("concordium.v2.CommissionRates", [
            { no: 1, name: "finalization", kind: "message", T: () => AmountFraction },
            { no: 2, name: "baking", kind: "message", T: () => AmountFraction },
            { no: 3, name: "transaction", kind: "message", T: () => AmountFraction }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.CommissionRates
 */
export const CommissionRates = new CommissionRates$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BakerPoolInfo$Type extends MessageType {
    constructor() {
        super("concordium.v2.BakerPoolInfo", [
            { no: 1, name: "open_status", kind: "enum", T: () => ["concordium.v2.OpenStatus", OpenStatus, "OPEN_STATUS_"] },
            { no: 2, name: "url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "commission_rates", kind: "message", T: () => CommissionRates }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.BakerPoolInfo
 */
export const BakerPoolInfo = new BakerPoolInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AccountStakingInfo$Type extends MessageType {
    constructor() {
        super("concordium.v2.AccountStakingInfo", [
            { no: 1, name: "baker", kind: "message", oneof: "stakingInfo", T: () => AccountStakingInfo_Baker },
            { no: 2, name: "delegator", kind: "message", oneof: "stakingInfo", T: () => AccountStakingInfo_Delegator }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.AccountStakingInfo
 */
export const AccountStakingInfo = new AccountStakingInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AccountStakingInfo_Baker$Type extends MessageType {
    constructor() {
        super("concordium.v2.AccountStakingInfo.Baker", [
            { no: 1, name: "staked_amount", kind: "message", T: () => Amount },
            { no: 2, name: "restake_earnings", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 3, name: "baker_info", kind: "message", T: () => BakerInfo },
            { no: 4, name: "pending_change", kind: "message", T: () => StakePendingChange },
            { no: 5, name: "pool_info", kind: "message", T: () => BakerPoolInfo }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.AccountStakingInfo.Baker
 */
export const AccountStakingInfo_Baker = new AccountStakingInfo_Baker$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AccountStakingInfo_Delegator$Type extends MessageType {
    constructor() {
        super("concordium.v2.AccountStakingInfo.Delegator", [
            { no: 1, name: "staked_amount", kind: "message", T: () => Amount },
            { no: 2, name: "restake_earnings", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 3, name: "target", kind: "message", T: () => DelegationTarget },
            { no: 4, name: "pending_change", kind: "message", T: () => StakePendingChange }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.AccountStakingInfo.Delegator
 */
export const AccountStakingInfo_Delegator = new AccountStakingInfo_Delegator$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SequenceNumber$Type extends MessageType {
    constructor() {
        super("concordium.v2.SequenceNumber", [
            { no: 1, name: "value", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.SequenceNumber
 */
export const SequenceNumber = new SequenceNumber$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UpdateSequenceNumber$Type extends MessageType {
    constructor() {
        super("concordium.v2.UpdateSequenceNumber", [
            { no: 1, name: "value", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.UpdateSequenceNumber
 */
export const UpdateSequenceNumber = new UpdateSequenceNumber$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Amount$Type extends MessageType {
    constructor() {
        super("concordium.v2.Amount", [
            { no: 1, name: "value", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.Amount
 */
export const Amount = new Amount$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CredentialIndex$Type extends MessageType {
    constructor() {
        super("concordium.v2.CredentialIndex", [
            { no: 1, name: "value", kind: "scalar", T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.CredentialIndex
 */
export const CredentialIndex = new CredentialIndex$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SignatureThreshold$Type extends MessageType {
    constructor() {
        super("concordium.v2.SignatureThreshold", [
            { no: 1, name: "value", kind: "scalar", T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.SignatureThreshold
 */
export const SignatureThreshold = new SignatureThreshold$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AccountThreshold$Type extends MessageType {
    constructor() {
        super("concordium.v2.AccountThreshold", [
            { no: 1, name: "value", kind: "scalar", T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.AccountThreshold
 */
export const AccountThreshold = new AccountThreshold$Type();
// @generated message type with reflection information, may provide speed optimized methods
class EncryptionKey$Type extends MessageType {
    constructor() {
        super("concordium.v2.EncryptionKey", [
            { no: 1, name: "value", kind: "scalar", T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.EncryptionKey
 */
export const EncryptionKey = new EncryptionKey$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AccountAddress$Type extends MessageType {
    constructor() {
        super("concordium.v2.AccountAddress", [
            { no: 1, name: "value", kind: "scalar", T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.AccountAddress
 */
export const AccountAddress = new AccountAddress$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Address$Type extends MessageType {
    constructor() {
        super("concordium.v2.Address", [
            { no: 1, name: "account", kind: "message", oneof: "type", T: () => AccountAddress },
            { no: 2, name: "contract", kind: "message", oneof: "type", T: () => ContractAddress }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.Address
 */
export const Address = new Address$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AccountVerifyKey$Type extends MessageType {
    constructor() {
        super("concordium.v2.AccountVerifyKey", [
            { no: 1, name: "ed25519_key", kind: "scalar", oneof: "key", T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.AccountVerifyKey
 */
export const AccountVerifyKey = new AccountVerifyKey$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CredentialPublicKeys$Type extends MessageType {
    constructor() {
        super("concordium.v2.CredentialPublicKeys", [
            { no: 1, name: "keys", kind: "map", K: 13 /*ScalarType.UINT32*/, V: { kind: "message", T: () => AccountVerifyKey } },
            { no: 2, name: "threshold", kind: "message", T: () => SignatureThreshold }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.CredentialPublicKeys
 */
export const CredentialPublicKeys = new CredentialPublicKeys$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CredentialRegistrationId$Type extends MessageType {
    constructor() {
        super("concordium.v2.CredentialRegistrationId", [
            { no: 1, name: "value", kind: "scalar", T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.CredentialRegistrationId
 */
export const CredentialRegistrationId = new CredentialRegistrationId$Type();
// @generated message type with reflection information, may provide speed optimized methods
class IdentityProviderIdentity$Type extends MessageType {
    constructor() {
        super("concordium.v2.IdentityProviderIdentity", [
            { no: 1, name: "value", kind: "scalar", T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.IdentityProviderIdentity
 */
export const IdentityProviderIdentity = new IdentityProviderIdentity$Type();
// @generated message type with reflection information, may provide speed optimized methods
class YearMonth$Type extends MessageType {
    constructor() {
        super("concordium.v2.YearMonth", [
            { no: 1, name: "year", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 2, name: "month", kind: "scalar", T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.YearMonth
 */
export const YearMonth = new YearMonth$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Policy$Type extends MessageType {
    constructor() {
        super("concordium.v2.Policy", [
            { no: 1, name: "created_at", kind: "message", T: () => YearMonth },
            { no: 2, name: "valid_to", kind: "message", T: () => YearMonth },
            { no: 3, name: "attributes", kind: "map", K: 13 /*ScalarType.UINT32*/, V: { kind: "scalar", T: 12 /*ScalarType.BYTES*/ } }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.Policy
 */
export const Policy = new Policy$Type();
// @generated message type with reflection information, may provide speed optimized methods
class InitialCredentialValues$Type extends MessageType {
    constructor() {
        super("concordium.v2.InitialCredentialValues", [
            { no: 1, name: "keys", kind: "message", T: () => CredentialPublicKeys },
            { no: 2, name: "cred_id", kind: "message", T: () => CredentialRegistrationId },
            { no: 3, name: "ip_id", kind: "message", T: () => IdentityProviderIdentity },
            { no: 4, name: "policy", kind: "message", T: () => Policy }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.InitialCredentialValues
 */
export const InitialCredentialValues = new InitialCredentialValues$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ChainArData$Type extends MessageType {
    constructor() {
        super("concordium.v2.ChainArData", [
            { no: 1, name: "enc_id_cred_pub_share", kind: "scalar", T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.ChainArData
 */
export const ChainArData = new ChainArData$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ArThreshold$Type extends MessageType {
    constructor() {
        super("concordium.v2.ArThreshold", [
            { no: 1, name: "value", kind: "scalar", T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.ArThreshold
 */
export const ArThreshold = new ArThreshold$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Commitment$Type extends MessageType {
    constructor() {
        super("concordium.v2.Commitment", [
            { no: 1, name: "value", kind: "scalar", T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.Commitment
 */
export const Commitment = new Commitment$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CredentialCommitments$Type extends MessageType {
    constructor() {
        super("concordium.v2.CredentialCommitments", [
            { no: 1, name: "prf", kind: "message", T: () => Commitment },
            { no: 2, name: "cred_counter", kind: "message", T: () => Commitment },
            { no: 3, name: "max_accounts", kind: "message", T: () => Commitment },
            { no: 4, name: "attributes", kind: "map", K: 13 /*ScalarType.UINT32*/, V: { kind: "message", T: () => Commitment } },
            { no: 5, name: "id_cred_sec_sharing_coeff", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Commitment }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.CredentialCommitments
 */
export const CredentialCommitments = new CredentialCommitments$Type();
// @generated message type with reflection information, may provide speed optimized methods
class NormalCredentialValues$Type extends MessageType {
    constructor() {
        super("concordium.v2.NormalCredentialValues", [
            { no: 1, name: "keys", kind: "message", T: () => CredentialPublicKeys },
            { no: 2, name: "cred_id", kind: "message", T: () => CredentialRegistrationId },
            { no: 3, name: "ip_id", kind: "message", T: () => IdentityProviderIdentity },
            { no: 4, name: "policy", kind: "message", T: () => Policy },
            { no: 5, name: "ar_threshold", kind: "message", T: () => ArThreshold },
            { no: 6, name: "ar_data", kind: "map", K: 13 /*ScalarType.UINT32*/, V: { kind: "message", T: () => ChainArData } },
            { no: 7, name: "commitments", kind: "message", T: () => CredentialCommitments }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.NormalCredentialValues
 */
export const NormalCredentialValues = new NormalCredentialValues$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AccountCredential$Type extends MessageType {
    constructor() {
        super("concordium.v2.AccountCredential", [
            { no: 1, name: "initial", kind: "message", oneof: "credentialValues", T: () => InitialCredentialValues },
            { no: 2, name: "normal", kind: "message", oneof: "credentialValues", T: () => NormalCredentialValues }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.AccountCredential
 */
export const AccountCredential = new AccountCredential$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Cooldown$Type extends MessageType {
    constructor() {
        super("concordium.v2.Cooldown", [
            { no: 1, name: "end_time", kind: "message", T: () => Timestamp },
            { no: 2, name: "amount", kind: "message", T: () => Amount },
            { no: 3, name: "status", kind: "enum", T: () => ["concordium.v2.Cooldown.CooldownStatus", Cooldown_CooldownStatus] }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.Cooldown
 */
export const Cooldown = new Cooldown$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AccountInfo$Type extends MessageType {
    constructor() {
        super("concordium.v2.AccountInfo", [
            { no: 1, name: "sequence_number", kind: "message", T: () => SequenceNumber },
            { no: 2, name: "amount", kind: "message", T: () => Amount },
            { no: 3, name: "schedule", kind: "message", T: () => ReleaseSchedule },
            { no: 4, name: "creds", kind: "map", K: 13 /*ScalarType.UINT32*/, V: { kind: "message", T: () => AccountCredential } },
            { no: 5, name: "threshold", kind: "message", T: () => AccountThreshold },
            { no: 6, name: "encrypted_balance", kind: "message", T: () => EncryptedBalance },
            { no: 7, name: "encryption_key", kind: "message", T: () => EncryptionKey },
            { no: 8, name: "index", kind: "message", T: () => AccountIndex },
            { no: 9, name: "stake", kind: "message", T: () => AccountStakingInfo },
            { no: 10, name: "address", kind: "message", T: () => AccountAddress },
            { no: 11, name: "cooldowns", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Cooldown },
            { no: 12, name: "available_balance", kind: "message", T: () => Amount }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.AccountInfo
 */
export const AccountInfo = new AccountInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BlockHashInput$Type extends MessageType {
    constructor() {
        super("concordium.v2.BlockHashInput", [
            { no: 1, name: "best", kind: "message", oneof: "blockHashInput", T: () => Empty },
            { no: 2, name: "last_final", kind: "message", oneof: "blockHashInput", T: () => Empty },
            { no: 3, name: "given", kind: "message", oneof: "blockHashInput", T: () => BlockHash },
            { no: 4, name: "absolute_height", kind: "message", oneof: "blockHashInput", T: () => AbsoluteBlockHeight },
            { no: 5, name: "relative_height", kind: "message", oneof: "blockHashInput", T: () => BlockHashInput_RelativeHeight }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.BlockHashInput
 */
export const BlockHashInput = new BlockHashInput$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BlockHashInput_RelativeHeight$Type extends MessageType {
    constructor() {
        super("concordium.v2.BlockHashInput.RelativeHeight", [
            { no: 1, name: "genesis_index", kind: "message", T: () => GenesisIndex },
            { no: 2, name: "height", kind: "message", T: () => BlockHeight },
            { no: 3, name: "restrict", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.BlockHashInput.RelativeHeight
 */
export const BlockHashInput_RelativeHeight = new BlockHashInput_RelativeHeight$Type();
// @generated message type with reflection information, may provide speed optimized methods
class EpochRequest$Type extends MessageType {
    constructor() {
        super("concordium.v2.EpochRequest", [
            { no: 1, name: "relative_epoch", kind: "message", oneof: "epochRequestInput", T: () => EpochRequest_RelativeEpoch },
            { no: 2, name: "block_hash", kind: "message", oneof: "epochRequestInput", T: () => BlockHashInput }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.EpochRequest
 */
export const EpochRequest = new EpochRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class EpochRequest_RelativeEpoch$Type extends MessageType {
    constructor() {
        super("concordium.v2.EpochRequest.RelativeEpoch", [
            { no: 1, name: "genesis_index", kind: "message", T: () => GenesisIndex },
            { no: 2, name: "epoch", kind: "message", T: () => Epoch }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.EpochRequest.RelativeEpoch
 */
export const EpochRequest_RelativeEpoch = new EpochRequest_RelativeEpoch$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AccountIdentifierInput$Type extends MessageType {
    constructor() {
        super("concordium.v2.AccountIdentifierInput", [
            { no: 1, name: "address", kind: "message", oneof: "accountIdentifierInput", T: () => AccountAddress },
            { no: 2, name: "cred_id", kind: "message", oneof: "accountIdentifierInput", T: () => CredentialRegistrationId },
            { no: 3, name: "account_index", kind: "message", oneof: "accountIdentifierInput", T: () => AccountIndex }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.AccountIdentifierInput
 */
export const AccountIdentifierInput = new AccountIdentifierInput$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AccountInfoRequest$Type extends MessageType {
    constructor() {
        super("concordium.v2.AccountInfoRequest", [
            { no: 1, name: "block_hash", kind: "message", T: () => BlockHashInput },
            { no: 2, name: "account_identifier", kind: "message", T: () => AccountIdentifierInput }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.AccountInfoRequest
 */
export const AccountInfoRequest = new AccountInfoRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FinalizedBlockInfo$Type extends MessageType {
    constructor() {
        super("concordium.v2.FinalizedBlockInfo", [
            { no: 1, name: "hash", kind: "message", T: () => BlockHash },
            { no: 2, name: "height", kind: "message", T: () => AbsoluteBlockHeight }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.FinalizedBlockInfo
 */
export const FinalizedBlockInfo = new FinalizedBlockInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AncestorsRequest$Type extends MessageType {
    constructor() {
        super("concordium.v2.AncestorsRequest", [
            { no: 1, name: "block_hash", kind: "message", T: () => BlockHashInput },
            { no: 2, name: "amount", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.AncestorsRequest
 */
export const AncestorsRequest = new AncestorsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ModuleSourceRequest$Type extends MessageType {
    constructor() {
        super("concordium.v2.ModuleSourceRequest", [
            { no: 1, name: "block_hash", kind: "message", T: () => BlockHashInput },
            { no: 2, name: "module_ref", kind: "message", T: () => ModuleRef }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.ModuleSourceRequest
 */
export const ModuleSourceRequest = new ModuleSourceRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ContractAddress$Type extends MessageType {
    constructor() {
        super("concordium.v2.ContractAddress", [
            { no: 1, name: "index", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "subindex", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.ContractAddress
 */
export const ContractAddress = new ContractAddress$Type();
// @generated message type with reflection information, may provide speed optimized methods
class InstanceInfoRequest$Type extends MessageType {
    constructor() {
        super("concordium.v2.InstanceInfoRequest", [
            { no: 1, name: "block_hash", kind: "message", T: () => BlockHashInput },
            { no: 2, name: "address", kind: "message", T: () => ContractAddress }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.InstanceInfoRequest
 */
export const InstanceInfoRequest = new InstanceInfoRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class InstanceInfo$Type extends MessageType {
    constructor() {
        super("concordium.v2.InstanceInfo", [
            { no: 1, name: "v0", kind: "message", oneof: "version", T: () => InstanceInfo_V0 },
            { no: 2, name: "v1", kind: "message", oneof: "version", T: () => InstanceInfo_V1 }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.InstanceInfo
 */
export const InstanceInfo = new InstanceInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class InstanceInfo_V0$Type extends MessageType {
    constructor() {
        super("concordium.v2.InstanceInfo.V0", [
            { no: 1, name: "model", kind: "message", T: () => ContractStateV0 },
            { no: 2, name: "owner", kind: "message", T: () => AccountAddress },
            { no: 3, name: "amount", kind: "message", T: () => Amount },
            { no: 4, name: "methods", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ReceiveName },
            { no: 5, name: "name", kind: "message", T: () => InitName },
            { no: 6, name: "source_module", kind: "message", T: () => ModuleRef }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.InstanceInfo.V0
 */
export const InstanceInfo_V0 = new InstanceInfo_V0$Type();
// @generated message type with reflection information, may provide speed optimized methods
class InstanceInfo_V1$Type extends MessageType {
    constructor() {
        super("concordium.v2.InstanceInfo.V1", [
            { no: 2, name: "owner", kind: "message", T: () => AccountAddress },
            { no: 3, name: "amount", kind: "message", T: () => Amount },
            { no: 4, name: "methods", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ReceiveName },
            { no: 5, name: "name", kind: "message", T: () => InitName },
            { no: 6, name: "source_module", kind: "message", T: () => ModuleRef }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.InstanceInfo.V1
 */
export const InstanceInfo_V1 = new InstanceInfo_V1$Type();
// @generated message type with reflection information, may provide speed optimized methods
class InstanceStateKVPair$Type extends MessageType {
    constructor() {
        super("concordium.v2.InstanceStateKVPair", [
            { no: 1, name: "key", kind: "scalar", T: 12 /*ScalarType.BYTES*/ },
            { no: 2, name: "value", kind: "scalar", T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.InstanceStateKVPair
 */
export const InstanceStateKVPair = new InstanceStateKVPair$Type();
// @generated message type with reflection information, may provide speed optimized methods
class InstanceStateLookupRequest$Type extends MessageType {
    constructor() {
        super("concordium.v2.InstanceStateLookupRequest", [
            { no: 1, name: "block_hash", kind: "message", T: () => BlockHashInput },
            { no: 2, name: "address", kind: "message", T: () => ContractAddress },
            { no: 3, name: "key", kind: "scalar", T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.InstanceStateLookupRequest
 */
export const InstanceStateLookupRequest = new InstanceStateLookupRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class InstanceStateValueAtKey$Type extends MessageType {
    constructor() {
        super("concordium.v2.InstanceStateValueAtKey", [
            { no: 1, name: "value", kind: "scalar", T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.InstanceStateValueAtKey
 */
export const InstanceStateValueAtKey = new InstanceStateValueAtKey$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ReceiveName$Type extends MessageType {
    constructor() {
        super("concordium.v2.ReceiveName", [
            { no: 1, name: "value", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.ReceiveName
 */
export const ReceiveName = new ReceiveName$Type();
// @generated message type with reflection information, may provide speed optimized methods
class InitName$Type extends MessageType {
    constructor() {
        super("concordium.v2.InitName", [
            { no: 1, name: "value", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.InitName
 */
export const InitName = new InitName$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Parameter$Type extends MessageType {
    constructor() {
        super("concordium.v2.Parameter", [
            { no: 1, name: "value", kind: "scalar", T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.Parameter
 */
export const Parameter = new Parameter$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ContractStateV0$Type extends MessageType {
    constructor() {
        super("concordium.v2.ContractStateV0", [
            { no: 1, name: "value", kind: "scalar", T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.ContractStateV0
 */
export const ContractStateV0 = new ContractStateV0$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BlockItemStatus$Type extends MessageType {
    constructor() {
        super("concordium.v2.BlockItemStatus", [
            { no: 1, name: "received", kind: "message", oneof: "status", T: () => Empty },
            { no: 2, name: "committed", kind: "message", oneof: "status", T: () => BlockItemStatus_Committed },
            { no: 3, name: "finalized", kind: "message", oneof: "status", T: () => BlockItemStatus_Finalized }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.BlockItemStatus
 */
export const BlockItemStatus = new BlockItemStatus$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BlockItemStatus_Committed$Type extends MessageType {
    constructor() {
        super("concordium.v2.BlockItemStatus.Committed", [
            { no: 1, name: "outcomes", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => BlockItemSummaryInBlock }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.BlockItemStatus.Committed
 */
export const BlockItemStatus_Committed = new BlockItemStatus_Committed$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BlockItemStatus_Finalized$Type extends MessageType {
    constructor() {
        super("concordium.v2.BlockItemStatus.Finalized", [
            { no: 1, name: "outcome", kind: "message", T: () => BlockItemSummaryInBlock }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.BlockItemStatus.Finalized
 */
export const BlockItemStatus_Finalized = new BlockItemStatus_Finalized$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BlockItemSummaryInBlock$Type extends MessageType {
    constructor() {
        super("concordium.v2.BlockItemSummaryInBlock", [
            { no: 1, name: "block_hash", kind: "message", T: () => BlockHash },
            { no: 2, name: "outcome", kind: "message", T: () => BlockItemSummary }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.BlockItemSummaryInBlock
 */
export const BlockItemSummaryInBlock = new BlockItemSummaryInBlock$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Energy$Type extends MessageType {
    constructor() {
        super("concordium.v2.Energy", [
            { no: 1, name: "value", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.Energy
 */
export const Energy = new Energy$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Slot$Type extends MessageType {
    constructor() {
        super("concordium.v2.Slot", [
            { no: 1, name: "value", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.Slot
 */
export const Slot = new Slot$Type();
// @generated message type with reflection information, may provide speed optimized methods
class NextAccountSequenceNumber$Type extends MessageType {
    constructor() {
        super("concordium.v2.NextAccountSequenceNumber", [
            { no: 1, name: "sequence_number", kind: "message", T: () => SequenceNumber },
            { no: 2, name: "all_final", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.NextAccountSequenceNumber
 */
export const NextAccountSequenceNumber = new NextAccountSequenceNumber$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Duration$Type extends MessageType {
    constructor() {
        super("concordium.v2.Duration", [
            { no: 1, name: "value", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.Duration
 */
export const Duration = new Duration$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RejectReason$Type extends MessageType {
    constructor() {
        super("concordium.v2.RejectReason", [
            { no: 1, name: "module_not_wf", kind: "message", oneof: "reason", T: () => Empty },
            { no: 2, name: "module_hash_already_exists", kind: "message", oneof: "reason", T: () => ModuleRef },
            { no: 3, name: "invalid_account_reference", kind: "message", oneof: "reason", T: () => AccountAddress },
            { no: 4, name: "invalid_init_method", kind: "message", oneof: "reason", T: () => RejectReason_InvalidInitMethod },
            { no: 5, name: "invalid_receive_method", kind: "message", oneof: "reason", T: () => RejectReason_InvalidReceiveMethod },
            { no: 6, name: "invalid_module_reference", kind: "message", oneof: "reason", T: () => ModuleRef },
            { no: 7, name: "invalid_contract_address", kind: "message", oneof: "reason", T: () => ContractAddress },
            { no: 8, name: "runtime_failure", kind: "message", oneof: "reason", T: () => Empty },
            { no: 9, name: "amount_too_large", kind: "message", oneof: "reason", T: () => RejectReason_AmountTooLarge },
            { no: 10, name: "serialization_failure", kind: "message", oneof: "reason", T: () => Empty },
            { no: 11, name: "out_of_energy", kind: "message", oneof: "reason", T: () => Empty },
            { no: 12, name: "rejected_init", kind: "message", oneof: "reason", T: () => RejectReason_RejectedInit },
            { no: 13, name: "rejected_receive", kind: "message", oneof: "reason", T: () => RejectReason_RejectedReceive },
            { no: 14, name: "invalid_proof", kind: "message", oneof: "reason", T: () => Empty },
            { no: 15, name: "already_a_baker", kind: "message", oneof: "reason", T: () => BakerId },
            { no: 16, name: "not_a_baker", kind: "message", oneof: "reason", T: () => AccountAddress },
            { no: 17, name: "insufficient_balance_for_baker_stake", kind: "message", oneof: "reason", T: () => Empty },
            { no: 18, name: "stake_under_minimum_threshold_for_baking", kind: "message", oneof: "reason", T: () => Empty },
            { no: 19, name: "baker_in_cooldown", kind: "message", oneof: "reason", T: () => Empty },
            { no: 20, name: "duplicate_aggregation_key", kind: "message", oneof: "reason", T: () => BakerAggregationVerifyKey },
            { no: 21, name: "non_existent_credential_id", kind: "message", oneof: "reason", T: () => Empty },
            { no: 22, name: "key_index_already_in_use", kind: "message", oneof: "reason", T: () => Empty },
            { no: 23, name: "invalid_account_threshold", kind: "message", oneof: "reason", T: () => Empty },
            { no: 24, name: "invalid_credential_key_sign_threshold", kind: "message", oneof: "reason", T: () => Empty },
            { no: 25, name: "invalid_encrypted_amount_transfer_proof", kind: "message", oneof: "reason", T: () => Empty },
            { no: 26, name: "invalid_transfer_to_public_proof", kind: "message", oneof: "reason", T: () => Empty },
            { no: 27, name: "encrypted_amount_self_transfer", kind: "message", oneof: "reason", T: () => AccountAddress },
            { no: 28, name: "invalid_index_on_encrypted_transfer", kind: "message", oneof: "reason", T: () => Empty },
            { no: 29, name: "zero_scheduledAmount", kind: "message", oneof: "reason", T: () => Empty },
            { no: 30, name: "non_increasing_schedule", kind: "message", oneof: "reason", T: () => Empty },
            { no: 31, name: "first_scheduled_release_expired", kind: "message", oneof: "reason", T: () => Empty },
            { no: 32, name: "scheduled_self_transfer", kind: "message", oneof: "reason", T: () => AccountAddress },
            { no: 33, name: "invalid_credentials", kind: "message", oneof: "reason", T: () => Empty },
            { no: 34, name: "duplicate_cred_ids", kind: "message", oneof: "reason", T: () => RejectReason_DuplicateCredIds },
            { no: 35, name: "non_existent_cred_ids", kind: "message", oneof: "reason", T: () => RejectReason_NonExistentCredIds },
            { no: 36, name: "remove_first_credential", kind: "message", oneof: "reason", T: () => Empty },
            { no: 37, name: "credential_holder_did_not_sign", kind: "message", oneof: "reason", T: () => Empty },
            { no: 38, name: "not_allowed_multiple_credentials", kind: "message", oneof: "reason", T: () => Empty },
            { no: 39, name: "not_allowed_to_receive_encrypted", kind: "message", oneof: "reason", T: () => Empty },
            { no: 40, name: "not_allowed_to_handle_encrypted", kind: "message", oneof: "reason", T: () => Empty },
            { no: 41, name: "missing_baker_add_parameters", kind: "message", oneof: "reason", T: () => Empty },
            { no: 42, name: "finalization_reward_commission_not_in_range", kind: "message", oneof: "reason", T: () => Empty },
            { no: 43, name: "baking_reward_commission_not_in_range", kind: "message", oneof: "reason", T: () => Empty },
            { no: 44, name: "transaction_fee_commission_not_in_range", kind: "message", oneof: "reason", T: () => Empty },
            { no: 45, name: "already_a_delegator", kind: "message", oneof: "reason", T: () => Empty },
            { no: 46, name: "insufficient_balance_for_delegation_stake", kind: "message", oneof: "reason", T: () => Empty },
            { no: 47, name: "missing_delegation_add_parameters", kind: "message", oneof: "reason", T: () => Empty },
            { no: 48, name: "insufficient_delegation_stake", kind: "message", oneof: "reason", T: () => Empty },
            { no: 49, name: "delegator_in_cooldown", kind: "message", oneof: "reason", T: () => Empty },
            { no: 50, name: "not_a_delegator", kind: "message", oneof: "reason", T: () => AccountAddress },
            { no: 51, name: "delegation_target_not_a_baker", kind: "message", oneof: "reason", T: () => BakerId },
            { no: 52, name: "stake_over_maximum_threshold_for_pool", kind: "message", oneof: "reason", T: () => Empty },
            { no: 53, name: "pool_would_become_over_delegated", kind: "message", oneof: "reason", T: () => Empty },
            { no: 54, name: "pool_closed", kind: "message", oneof: "reason", T: () => Empty }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.RejectReason
 */
export const RejectReason = new RejectReason$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RejectReason_InvalidInitMethod$Type extends MessageType {
    constructor() {
        super("concordium.v2.RejectReason.InvalidInitMethod", [
            { no: 1, name: "module_ref", kind: "message", T: () => ModuleRef },
            { no: 2, name: "init_name", kind: "message", T: () => InitName }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.RejectReason.InvalidInitMethod
 */
export const RejectReason_InvalidInitMethod = new RejectReason_InvalidInitMethod$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RejectReason_InvalidReceiveMethod$Type extends MessageType {
    constructor() {
        super("concordium.v2.RejectReason.InvalidReceiveMethod", [
            { no: 1, name: "module_ref", kind: "message", T: () => ModuleRef },
            { no: 2, name: "receive_name", kind: "message", T: () => ReceiveName }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.RejectReason.InvalidReceiveMethod
 */
export const RejectReason_InvalidReceiveMethod = new RejectReason_InvalidReceiveMethod$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RejectReason_AmountTooLarge$Type extends MessageType {
    constructor() {
        super("concordium.v2.RejectReason.AmountTooLarge", [
            { no: 1, name: "address", kind: "message", T: () => Address },
            { no: 2, name: "amount", kind: "message", T: () => Amount }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.RejectReason.AmountTooLarge
 */
export const RejectReason_AmountTooLarge = new RejectReason_AmountTooLarge$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RejectReason_RejectedInit$Type extends MessageType {
    constructor() {
        super("concordium.v2.RejectReason.RejectedInit", [
            { no: 1, name: "reject_reason", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.RejectReason.RejectedInit
 */
export const RejectReason_RejectedInit = new RejectReason_RejectedInit$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RejectReason_RejectedReceive$Type extends MessageType {
    constructor() {
        super("concordium.v2.RejectReason.RejectedReceive", [
            { no: 1, name: "reject_reason", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "contract_address", kind: "message", T: () => ContractAddress },
            { no: 3, name: "receive_name", kind: "message", T: () => ReceiveName },
            { no: 4, name: "parameter", kind: "message", T: () => Parameter }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.RejectReason.RejectedReceive
 */
export const RejectReason_RejectedReceive = new RejectReason_RejectedReceive$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RejectReason_DuplicateCredIds$Type extends MessageType {
    constructor() {
        super("concordium.v2.RejectReason.DuplicateCredIds", [
            { no: 1, name: "ids", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => CredentialRegistrationId }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.RejectReason.DuplicateCredIds
 */
export const RejectReason_DuplicateCredIds = new RejectReason_DuplicateCredIds$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RejectReason_NonExistentCredIds$Type extends MessageType {
    constructor() {
        super("concordium.v2.RejectReason.NonExistentCredIds", [
            { no: 1, name: "ids", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => CredentialRegistrationId }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.RejectReason.NonExistentCredIds
 */
export const RejectReason_NonExistentCredIds = new RejectReason_NonExistentCredIds$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ContractInitializedEvent$Type extends MessageType {
    constructor() {
        super("concordium.v2.ContractInitializedEvent", [
            { no: 1, name: "contract_version", kind: "enum", T: () => ["concordium.v2.ContractVersion", ContractVersion] },
            { no: 2, name: "origin_ref", kind: "message", T: () => ModuleRef },
            { no: 3, name: "address", kind: "message", T: () => ContractAddress },
            { no: 4, name: "amount", kind: "message", T: () => Amount },
            { no: 5, name: "init_name", kind: "message", T: () => InitName },
            { no: 6, name: "events", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ContractEvent }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.ContractInitializedEvent
 */
export const ContractInitializedEvent = new ContractInitializedEvent$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ContractEvent$Type extends MessageType {
    constructor() {
        super("concordium.v2.ContractEvent", [
            { no: 1, name: "value", kind: "scalar", T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.ContractEvent
 */
export const ContractEvent = new ContractEvent$Type();
// @generated message type with reflection information, may provide speed optimized methods
class InstanceUpdatedEvent$Type extends MessageType {
    constructor() {
        super("concordium.v2.InstanceUpdatedEvent", [
            { no: 1, name: "contract_version", kind: "enum", T: () => ["concordium.v2.ContractVersion", ContractVersion] },
            { no: 2, name: "address", kind: "message", T: () => ContractAddress },
            { no: 3, name: "instigator", kind: "message", T: () => Address },
            { no: 4, name: "amount", kind: "message", T: () => Amount },
            { no: 5, name: "parameter", kind: "message", T: () => Parameter },
            { no: 6, name: "receive_name", kind: "message", T: () => ReceiveName },
            { no: 7, name: "events", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ContractEvent }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.InstanceUpdatedEvent
 */
export const InstanceUpdatedEvent = new InstanceUpdatedEvent$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ContractTraceElement$Type extends MessageType {
    constructor() {
        super("concordium.v2.ContractTraceElement", [
            { no: 1, name: "updated", kind: "message", oneof: "element", T: () => InstanceUpdatedEvent },
            { no: 2, name: "transferred", kind: "message", oneof: "element", T: () => ContractTraceElement_Transferred },
            { no: 3, name: "interrupted", kind: "message", oneof: "element", T: () => ContractTraceElement_Interrupted },
            { no: 4, name: "resumed", kind: "message", oneof: "element", T: () => ContractTraceElement_Resumed },
            { no: 5, name: "upgraded", kind: "message", oneof: "element", T: () => ContractTraceElement_Upgraded }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.ContractTraceElement
 */
export const ContractTraceElement = new ContractTraceElement$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ContractTraceElement_Transferred$Type extends MessageType {
    constructor() {
        super("concordium.v2.ContractTraceElement.Transferred", [
            { no: 1, name: "sender", kind: "message", T: () => ContractAddress },
            { no: 2, name: "amount", kind: "message", T: () => Amount },
            { no: 3, name: "receiver", kind: "message", T: () => AccountAddress }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.ContractTraceElement.Transferred
 */
export const ContractTraceElement_Transferred = new ContractTraceElement_Transferred$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ContractTraceElement_Interrupted$Type extends MessageType {
    constructor() {
        super("concordium.v2.ContractTraceElement.Interrupted", [
            { no: 1, name: "address", kind: "message", T: () => ContractAddress },
            { no: 2, name: "events", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ContractEvent }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.ContractTraceElement.Interrupted
 */
export const ContractTraceElement_Interrupted = new ContractTraceElement_Interrupted$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ContractTraceElement_Resumed$Type extends MessageType {
    constructor() {
        super("concordium.v2.ContractTraceElement.Resumed", [
            { no: 1, name: "address", kind: "message", T: () => ContractAddress },
            { no: 2, name: "success", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.ContractTraceElement.Resumed
 */
export const ContractTraceElement_Resumed = new ContractTraceElement_Resumed$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ContractTraceElement_Upgraded$Type extends MessageType {
    constructor() {
        super("concordium.v2.ContractTraceElement.Upgraded", [
            { no: 1, name: "address", kind: "message", T: () => ContractAddress },
            { no: 2, name: "from", kind: "message", T: () => ModuleRef },
            { no: 3, name: "to", kind: "message", T: () => ModuleRef }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.ContractTraceElement.Upgraded
 */
export const ContractTraceElement_Upgraded = new ContractTraceElement_Upgraded$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BakerKeysEvent$Type extends MessageType {
    constructor() {
        super("concordium.v2.BakerKeysEvent", [
            { no: 1, name: "baker_id", kind: "message", T: () => BakerId },
            { no: 2, name: "account", kind: "message", T: () => AccountAddress },
            { no: 3, name: "sign_key", kind: "message", T: () => BakerSignatureVerifyKey },
            { no: 4, name: "election_key", kind: "message", T: () => BakerElectionVerifyKey },
            { no: 5, name: "aggregation_key", kind: "message", T: () => BakerAggregationVerifyKey }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.BakerKeysEvent
 */
export const BakerKeysEvent = new BakerKeysEvent$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Memo$Type extends MessageType {
    constructor() {
        super("concordium.v2.Memo", [
            { no: 1, name: "value", kind: "scalar", T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.Memo
 */
export const Memo = new Memo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BakerStakeUpdatedData$Type extends MessageType {
    constructor() {
        super("concordium.v2.BakerStakeUpdatedData", [
            { no: 1, name: "baker_id", kind: "message", T: () => BakerId },
            { no: 2, name: "new_stake", kind: "message", T: () => Amount },
            { no: 3, name: "increased", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.BakerStakeUpdatedData
 */
export const BakerStakeUpdatedData = new BakerStakeUpdatedData$Type();
// @generated message type with reflection information, may provide speed optimized methods
class EncryptedAmountRemovedEvent$Type extends MessageType {
    constructor() {
        super("concordium.v2.EncryptedAmountRemovedEvent", [
            { no: 1, name: "account", kind: "message", T: () => AccountAddress },
            { no: 2, name: "new_amount", kind: "message", T: () => EncryptedAmount },
            { no: 3, name: "input_amount", kind: "message", T: () => EncryptedAmount },
            { no: 4, name: "up_to_index", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.EncryptedAmountRemovedEvent
 */
export const EncryptedAmountRemovedEvent = new EncryptedAmountRemovedEvent$Type();
// @generated message type with reflection information, may provide speed optimized methods
class NewEncryptedAmountEvent$Type extends MessageType {
    constructor() {
        super("concordium.v2.NewEncryptedAmountEvent", [
            { no: 1, name: "receiver", kind: "message", T: () => AccountAddress },
            { no: 2, name: "new_index", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 3, name: "encrypted_amount", kind: "message", T: () => EncryptedAmount }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.NewEncryptedAmountEvent
 */
export const NewEncryptedAmountEvent = new NewEncryptedAmountEvent$Type();
// @generated message type with reflection information, may provide speed optimized methods
class EncryptedSelfAmountAddedEvent$Type extends MessageType {
    constructor() {
        super("concordium.v2.EncryptedSelfAmountAddedEvent", [
            { no: 1, name: "account", kind: "message", T: () => AccountAddress },
            { no: 2, name: "new_amount", kind: "message", T: () => EncryptedAmount },
            { no: 3, name: "amount", kind: "message", T: () => Amount }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.EncryptedSelfAmountAddedEvent
 */
export const EncryptedSelfAmountAddedEvent = new EncryptedSelfAmountAddedEvent$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RegisteredData$Type extends MessageType {
    constructor() {
        super("concordium.v2.RegisteredData", [
            { no: 1, name: "value", kind: "scalar", T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.RegisteredData
 */
export const RegisteredData = new RegisteredData$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BakerEvent$Type extends MessageType {
    constructor() {
        super("concordium.v2.BakerEvent", [
            { no: 1, name: "baker_added", kind: "message", oneof: "event", T: () => BakerEvent_BakerAdded },
            { no: 2, name: "baker_removed", kind: "message", oneof: "event", T: () => BakerId },
            { no: 3, name: "baker_stake_increased", kind: "message", oneof: "event", T: () => BakerEvent_BakerStakeIncreased },
            { no: 4, name: "baker_stake_decreased", kind: "message", oneof: "event", T: () => BakerEvent_BakerStakeDecreased },
            { no: 5, name: "baker_restake_earnings_updated", kind: "message", oneof: "event", T: () => BakerEvent_BakerRestakeEarningsUpdated },
            { no: 6, name: "baker_keys_updated", kind: "message", oneof: "event", T: () => BakerKeysEvent },
            { no: 7, name: "baker_set_open_status", kind: "message", oneof: "event", T: () => BakerEvent_BakerSetOpenStatus },
            { no: 8, name: "baker_set_metadata_url", kind: "message", oneof: "event", T: () => BakerEvent_BakerSetMetadataUrl },
            { no: 9, name: "baker_set_transaction_fee_commission", kind: "message", oneof: "event", T: () => BakerEvent_BakerSetTransactionFeeCommission },
            { no: 10, name: "baker_set_baking_reward_commission", kind: "message", oneof: "event", T: () => BakerEvent_BakerSetBakingRewardCommission },
            { no: 11, name: "baker_set_finalization_reward_commission", kind: "message", oneof: "event", T: () => BakerEvent_BakerSetFinalizationRewardCommission }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.BakerEvent
 */
export const BakerEvent = new BakerEvent$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BakerEvent_BakerAdded$Type extends MessageType {
    constructor() {
        super("concordium.v2.BakerEvent.BakerAdded", [
            { no: 1, name: "keys_event", kind: "message", T: () => BakerKeysEvent },
            { no: 2, name: "stake", kind: "message", T: () => Amount },
            { no: 3, name: "restake_earnings", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.BakerEvent.BakerAdded
 */
export const BakerEvent_BakerAdded = new BakerEvent_BakerAdded$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BakerEvent_BakerStakeIncreased$Type extends MessageType {
    constructor() {
        super("concordium.v2.BakerEvent.BakerStakeIncreased", [
            { no: 1, name: "baker_id", kind: "message", T: () => BakerId },
            { no: 2, name: "new_stake", kind: "message", T: () => Amount }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.BakerEvent.BakerStakeIncreased
 */
export const BakerEvent_BakerStakeIncreased = new BakerEvent_BakerStakeIncreased$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BakerEvent_BakerStakeDecreased$Type extends MessageType {
    constructor() {
        super("concordium.v2.BakerEvent.BakerStakeDecreased", [
            { no: 1, name: "baker_id", kind: "message", T: () => BakerId },
            { no: 2, name: "new_stake", kind: "message", T: () => Amount }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.BakerEvent.BakerStakeDecreased
 */
export const BakerEvent_BakerStakeDecreased = new BakerEvent_BakerStakeDecreased$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BakerEvent_BakerRestakeEarningsUpdated$Type extends MessageType {
    constructor() {
        super("concordium.v2.BakerEvent.BakerRestakeEarningsUpdated", [
            { no: 1, name: "baker_id", kind: "message", T: () => BakerId },
            { no: 2, name: "restake_earnings", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.BakerEvent.BakerRestakeEarningsUpdated
 */
export const BakerEvent_BakerRestakeEarningsUpdated = new BakerEvent_BakerRestakeEarningsUpdated$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BakerEvent_BakerSetOpenStatus$Type extends MessageType {
    constructor() {
        super("concordium.v2.BakerEvent.BakerSetOpenStatus", [
            { no: 1, name: "baker_id", kind: "message", T: () => BakerId },
            { no: 2, name: "open_status", kind: "enum", T: () => ["concordium.v2.OpenStatus", OpenStatus, "OPEN_STATUS_"] }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.BakerEvent.BakerSetOpenStatus
 */
export const BakerEvent_BakerSetOpenStatus = new BakerEvent_BakerSetOpenStatus$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BakerEvent_BakerSetMetadataUrl$Type extends MessageType {
    constructor() {
        super("concordium.v2.BakerEvent.BakerSetMetadataUrl", [
            { no: 1, name: "baker_id", kind: "message", T: () => BakerId },
            { no: 2, name: "url", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.BakerEvent.BakerSetMetadataUrl
 */
export const BakerEvent_BakerSetMetadataUrl = new BakerEvent_BakerSetMetadataUrl$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BakerEvent_BakerSetTransactionFeeCommission$Type extends MessageType {
    constructor() {
        super("concordium.v2.BakerEvent.BakerSetTransactionFeeCommission", [
            { no: 1, name: "baker_id", kind: "message", T: () => BakerId },
            { no: 2, name: "transaction_fee_commission", kind: "message", T: () => AmountFraction }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.BakerEvent.BakerSetTransactionFeeCommission
 */
export const BakerEvent_BakerSetTransactionFeeCommission = new BakerEvent_BakerSetTransactionFeeCommission$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BakerEvent_BakerSetBakingRewardCommission$Type extends MessageType {
    constructor() {
        super("concordium.v2.BakerEvent.BakerSetBakingRewardCommission", [
            { no: 1, name: "baker_id", kind: "message", T: () => BakerId },
            { no: 2, name: "baking_reward_commission", kind: "message", T: () => AmountFraction }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.BakerEvent.BakerSetBakingRewardCommission
 */
export const BakerEvent_BakerSetBakingRewardCommission = new BakerEvent_BakerSetBakingRewardCommission$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BakerEvent_BakerSetFinalizationRewardCommission$Type extends MessageType {
    constructor() {
        super("concordium.v2.BakerEvent.BakerSetFinalizationRewardCommission", [
            { no: 1, name: "baker_id", kind: "message", T: () => BakerId },
            { no: 2, name: "finalization_reward_commission", kind: "message", T: () => AmountFraction }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.BakerEvent.BakerSetFinalizationRewardCommission
 */
export const BakerEvent_BakerSetFinalizationRewardCommission = new BakerEvent_BakerSetFinalizationRewardCommission$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DelegatorId$Type extends MessageType {
    constructor() {
        super("concordium.v2.DelegatorId", [
            { no: 1, name: "id", kind: "message", T: () => AccountIndex }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.DelegatorId
 */
export const DelegatorId = new DelegatorId$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DelegationEvent$Type extends MessageType {
    constructor() {
        super("concordium.v2.DelegationEvent", [
            { no: 1, name: "delegation_stake_increased", kind: "message", oneof: "event", T: () => DelegationEvent_DelegationStakeIncreased },
            { no: 2, name: "delegation_stake_decreased", kind: "message", oneof: "event", T: () => DelegationEvent_DelegationStakeDecreased },
            { no: 3, name: "delegation_set_restake_earnings", kind: "message", oneof: "event", T: () => DelegationEvent_DelegationSetRestakeEarnings },
            { no: 4, name: "delegation_set_delegation_target", kind: "message", oneof: "event", T: () => DelegationEvent_DelegationSetDelegationTarget },
            { no: 5, name: "delegation_added", kind: "message", oneof: "event", T: () => DelegatorId },
            { no: 6, name: "delegation_removed", kind: "message", oneof: "event", T: () => DelegatorId }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.DelegationEvent
 */
export const DelegationEvent = new DelegationEvent$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DelegationEvent_DelegationStakeIncreased$Type extends MessageType {
    constructor() {
        super("concordium.v2.DelegationEvent.DelegationStakeIncreased", [
            { no: 1, name: "delegator_id", kind: "message", T: () => DelegatorId },
            { no: 2, name: "new_stake", kind: "message", T: () => Amount }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.DelegationEvent.DelegationStakeIncreased
 */
export const DelegationEvent_DelegationStakeIncreased = new DelegationEvent_DelegationStakeIncreased$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DelegationEvent_DelegationStakeDecreased$Type extends MessageType {
    constructor() {
        super("concordium.v2.DelegationEvent.DelegationStakeDecreased", [
            { no: 1, name: "delegator_id", kind: "message", T: () => DelegatorId },
            { no: 2, name: "new_stake", kind: "message", T: () => Amount }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.DelegationEvent.DelegationStakeDecreased
 */
export const DelegationEvent_DelegationStakeDecreased = new DelegationEvent_DelegationStakeDecreased$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DelegationEvent_DelegationSetRestakeEarnings$Type extends MessageType {
    constructor() {
        super("concordium.v2.DelegationEvent.DelegationSetRestakeEarnings", [
            { no: 1, name: "delegator_id", kind: "message", T: () => DelegatorId },
            { no: 2, name: "restake_earnings", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.DelegationEvent.DelegationSetRestakeEarnings
 */
export const DelegationEvent_DelegationSetRestakeEarnings = new DelegationEvent_DelegationSetRestakeEarnings$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DelegationEvent_DelegationSetDelegationTarget$Type extends MessageType {
    constructor() {
        super("concordium.v2.DelegationEvent.DelegationSetDelegationTarget", [
            { no: 1, name: "delegator_id", kind: "message", T: () => DelegatorId },
            { no: 2, name: "delegation_target", kind: "message", T: () => DelegationTarget }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.DelegationEvent.DelegationSetDelegationTarget
 */
export const DelegationEvent_DelegationSetDelegationTarget = new DelegationEvent_DelegationSetDelegationTarget$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AccountTransactionEffects$Type extends MessageType {
    constructor() {
        super("concordium.v2.AccountTransactionEffects", [
            { no: 1, name: "none", kind: "message", oneof: "effect", T: () => AccountTransactionEffects_None },
            { no: 2, name: "module_deployed", kind: "message", oneof: "effect", T: () => ModuleRef },
            { no: 3, name: "contract_initialized", kind: "message", oneof: "effect", T: () => ContractInitializedEvent },
            { no: 4, name: "contract_update_issued", kind: "message", oneof: "effect", T: () => AccountTransactionEffects_ContractUpdateIssued },
            { no: 5, name: "account_transfer", kind: "message", oneof: "effect", T: () => AccountTransactionEffects_AccountTransfer },
            { no: 6, name: "baker_added", kind: "message", oneof: "effect", T: () => BakerEvent_BakerAdded },
            { no: 7, name: "baker_removed", kind: "message", oneof: "effect", T: () => BakerId },
            { no: 8, name: "baker_stake_updated", kind: "message", oneof: "effect", T: () => AccountTransactionEffects_BakerStakeUpdated },
            { no: 9, name: "baker_restake_earnings_updated", kind: "message", oneof: "effect", T: () => BakerEvent_BakerRestakeEarningsUpdated },
            { no: 10, name: "baker_keys_updated", kind: "message", oneof: "effect", T: () => BakerKeysEvent },
            { no: 11, name: "encrypted_amount_transferred", kind: "message", oneof: "effect", T: () => AccountTransactionEffects_EncryptedAmountTransferred },
            { no: 12, name: "transferred_to_encrypted", kind: "message", oneof: "effect", T: () => EncryptedSelfAmountAddedEvent },
            { no: 13, name: "transferred_to_public", kind: "message", oneof: "effect", T: () => AccountTransactionEffects_TransferredToPublic },
            { no: 14, name: "transferred_with_schedule", kind: "message", oneof: "effect", T: () => AccountTransactionEffects_TransferredWithSchedule },
            { no: 15, name: "credential_keys_updated", kind: "message", oneof: "effect", T: () => CredentialRegistrationId },
            { no: 16, name: "credentials_updated", kind: "message", oneof: "effect", T: () => AccountTransactionEffects_CredentialsUpdated },
            { no: 17, name: "data_registered", kind: "message", oneof: "effect", T: () => RegisteredData },
            { no: 18, name: "baker_configured", kind: "message", oneof: "effect", T: () => AccountTransactionEffects_BakerConfigured },
            { no: 19, name: "delegation_configured", kind: "message", oneof: "effect", T: () => AccountTransactionEffects_DelegationConfigured }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.AccountTransactionEffects
 */
export const AccountTransactionEffects = new AccountTransactionEffects$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AccountTransactionEffects_None$Type extends MessageType {
    constructor() {
        super("concordium.v2.AccountTransactionEffects.None", [
            { no: 1, name: "transaction_type", kind: "enum", opt: true, T: () => ["concordium.v2.TransactionType", TransactionType] },
            { no: 2, name: "reject_reason", kind: "message", T: () => RejectReason }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.AccountTransactionEffects.None
 */
export const AccountTransactionEffects_None = new AccountTransactionEffects_None$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AccountTransactionEffects_ContractUpdateIssued$Type extends MessageType {
    constructor() {
        super("concordium.v2.AccountTransactionEffects.ContractUpdateIssued", [
            { no: 1, name: "effects", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ContractTraceElement }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.AccountTransactionEffects.ContractUpdateIssued
 */
export const AccountTransactionEffects_ContractUpdateIssued = new AccountTransactionEffects_ContractUpdateIssued$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AccountTransactionEffects_AccountTransfer$Type extends MessageType {
    constructor() {
        super("concordium.v2.AccountTransactionEffects.AccountTransfer", [
            { no: 1, name: "amount", kind: "message", T: () => Amount },
            { no: 2, name: "receiver", kind: "message", T: () => AccountAddress },
            { no: 3, name: "memo", kind: "message", T: () => Memo }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.AccountTransactionEffects.AccountTransfer
 */
export const AccountTransactionEffects_AccountTransfer = new AccountTransactionEffects_AccountTransfer$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AccountTransactionEffects_BakerStakeUpdated$Type extends MessageType {
    constructor() {
        super("concordium.v2.AccountTransactionEffects.BakerStakeUpdated", [
            { no: 1, name: "update", kind: "message", T: () => BakerStakeUpdatedData }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.AccountTransactionEffects.BakerStakeUpdated
 */
export const AccountTransactionEffects_BakerStakeUpdated = new AccountTransactionEffects_BakerStakeUpdated$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AccountTransactionEffects_EncryptedAmountTransferred$Type extends MessageType {
    constructor() {
        super("concordium.v2.AccountTransactionEffects.EncryptedAmountTransferred", [
            { no: 1, name: "removed", kind: "message", T: () => EncryptedAmountRemovedEvent },
            { no: 2, name: "added", kind: "message", T: () => NewEncryptedAmountEvent },
            { no: 3, name: "memo", kind: "message", T: () => Memo }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.AccountTransactionEffects.EncryptedAmountTransferred
 */
export const AccountTransactionEffects_EncryptedAmountTransferred = new AccountTransactionEffects_EncryptedAmountTransferred$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AccountTransactionEffects_TransferredToPublic$Type extends MessageType {
    constructor() {
        super("concordium.v2.AccountTransactionEffects.TransferredToPublic", [
            { no: 1, name: "removed", kind: "message", T: () => EncryptedAmountRemovedEvent },
            { no: 2, name: "amount", kind: "message", T: () => Amount }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.AccountTransactionEffects.TransferredToPublic
 */
export const AccountTransactionEffects_TransferredToPublic = new AccountTransactionEffects_TransferredToPublic$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AccountTransactionEffects_TransferredWithSchedule$Type extends MessageType {
    constructor() {
        super("concordium.v2.AccountTransactionEffects.TransferredWithSchedule", [
            { no: 1, name: "receiver", kind: "message", T: () => AccountAddress },
            { no: 2, name: "amount", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => NewRelease },
            { no: 3, name: "memo", kind: "message", T: () => Memo }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.AccountTransactionEffects.TransferredWithSchedule
 */
export const AccountTransactionEffects_TransferredWithSchedule = new AccountTransactionEffects_TransferredWithSchedule$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AccountTransactionEffects_CredentialsUpdated$Type extends MessageType {
    constructor() {
        super("concordium.v2.AccountTransactionEffects.CredentialsUpdated", [
            { no: 1, name: "new_cred_ids", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => CredentialRegistrationId },
            { no: 2, name: "removed_cred_ids", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => CredentialRegistrationId },
            { no: 3, name: "new_threshold", kind: "message", T: () => AccountThreshold }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.AccountTransactionEffects.CredentialsUpdated
 */
export const AccountTransactionEffects_CredentialsUpdated = new AccountTransactionEffects_CredentialsUpdated$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AccountTransactionEffects_BakerConfigured$Type extends MessageType {
    constructor() {
        super("concordium.v2.AccountTransactionEffects.BakerConfigured", [
            { no: 1, name: "events", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => BakerEvent }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.AccountTransactionEffects.BakerConfigured
 */
export const AccountTransactionEffects_BakerConfigured = new AccountTransactionEffects_BakerConfigured$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AccountTransactionEffects_DelegationConfigured$Type extends MessageType {
    constructor() {
        super("concordium.v2.AccountTransactionEffects.DelegationConfigured", [
            { no: 1, name: "events", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => DelegationEvent }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.AccountTransactionEffects.DelegationConfigured
 */
export const AccountTransactionEffects_DelegationConfigured = new AccountTransactionEffects_DelegationConfigured$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ElectionDifficulty$Type extends MessageType {
    constructor() {
        super("concordium.v2.ElectionDifficulty", [
            { no: 1, name: "value", kind: "message", T: () => AmountFraction }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.ElectionDifficulty
 */
export const ElectionDifficulty = new ElectionDifficulty$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TimeoutParameters$Type extends MessageType {
    constructor() {
        super("concordium.v2.TimeoutParameters", [
            { no: 1, name: "timeout_base", kind: "message", T: () => Duration },
            { no: 2, name: "timeout_increase", kind: "message", T: () => Ratio },
            { no: 3, name: "timeout_decrease", kind: "message", T: () => Ratio }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.TimeoutParameters
 */
export const TimeoutParameters = new TimeoutParameters$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FinalizationCommitteeParameters$Type extends MessageType {
    constructor() {
        super("concordium.v2.FinalizationCommitteeParameters", [
            { no: 1, name: "minimum_finalizers", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 2, name: "maximum_finalizers", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 3, name: "finalizer_relative_stake_threshold", kind: "message", T: () => AmountFraction }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.FinalizationCommitteeParameters
 */
export const FinalizationCommitteeParameters = new FinalizationCommitteeParameters$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ConsensusParametersV1$Type extends MessageType {
    constructor() {
        super("concordium.v2.ConsensusParametersV1", [
            { no: 1, name: "timeout_parameters", kind: "message", T: () => TimeoutParameters },
            { no: 2, name: "min_block_time", kind: "message", T: () => Duration },
            { no: 3, name: "block_energy_limit", kind: "message", T: () => Energy }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.ConsensusParametersV1
 */
export const ConsensusParametersV1 = new ConsensusParametersV1$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ExchangeRate$Type extends MessageType {
    constructor() {
        super("concordium.v2.ExchangeRate", [
            { no: 1, name: "value", kind: "message", T: () => Ratio }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.ExchangeRate
 */
export const ExchangeRate = new ExchangeRate$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Ratio$Type extends MessageType {
    constructor() {
        super("concordium.v2.Ratio", [
            { no: 1, name: "numerator", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "denominator", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.Ratio
 */
export const Ratio = new Ratio$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UpdatePublicKey$Type extends MessageType {
    constructor() {
        super("concordium.v2.UpdatePublicKey", [
            { no: 1, name: "value", kind: "scalar", T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.UpdatePublicKey
 */
export const UpdatePublicKey = new UpdatePublicKey$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UpdateKeysThreshold$Type extends MessageType {
    constructor() {
        super("concordium.v2.UpdateKeysThreshold", [
            { no: 1, name: "value", kind: "scalar", T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.UpdateKeysThreshold
 */
export const UpdateKeysThreshold = new UpdateKeysThreshold$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UpdateKeysIndex$Type extends MessageType {
    constructor() {
        super("concordium.v2.UpdateKeysIndex", [
            { no: 1, name: "value", kind: "scalar", T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.UpdateKeysIndex
 */
export const UpdateKeysIndex = new UpdateKeysIndex$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HigherLevelKeys$Type extends MessageType {
    constructor() {
        super("concordium.v2.HigherLevelKeys", [
            { no: 1, name: "keys", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => UpdatePublicKey },
            { no: 2, name: "threshold", kind: "message", T: () => UpdateKeysThreshold }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.HigherLevelKeys
 */
export const HigherLevelKeys = new HigherLevelKeys$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AccessStructure$Type extends MessageType {
    constructor() {
        super("concordium.v2.AccessStructure", [
            { no: 1, name: "access_public_keys", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => UpdateKeysIndex },
            { no: 2, name: "access_threshold", kind: "message", T: () => UpdateKeysThreshold }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.AccessStructure
 */
export const AccessStructure = new AccessStructure$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AuthorizationsV0$Type extends MessageType {
    constructor() {
        super("concordium.v2.AuthorizationsV0", [
            { no: 1, name: "keys", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => UpdatePublicKey },
            { no: 2, name: "emergency", kind: "message", T: () => AccessStructure },
            { no: 3, name: "protocol", kind: "message", T: () => AccessStructure },
            { no: 4, name: "parameter_consensus", kind: "message", T: () => AccessStructure },
            { no: 5, name: "parameter_euro_per_energy", kind: "message", T: () => AccessStructure },
            { no: 6, name: "parameter_micro_CCD_per_euro", kind: "message", T: () => AccessStructure },
            { no: 7, name: "parameter_foundation_account", kind: "message", T: () => AccessStructure },
            { no: 8, name: "parameter_mint_distribution", kind: "message", T: () => AccessStructure },
            { no: 9, name: "parameter_transaction_fee_distribution", kind: "message", T: () => AccessStructure },
            { no: 10, name: "parameter_gas_rewards", kind: "message", T: () => AccessStructure },
            { no: 11, name: "pool_parameters", kind: "message", T: () => AccessStructure },
            { no: 12, name: "add_anonymity_revoker", kind: "message", T: () => AccessStructure },
            { no: 13, name: "add_identity_provider", kind: "message", T: () => AccessStructure }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.AuthorizationsV0
 */
export const AuthorizationsV0 = new AuthorizationsV0$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AuthorizationsV1$Type extends MessageType {
    constructor() {
        super("concordium.v2.AuthorizationsV1", [
            { no: 1, name: "v0", kind: "message", T: () => AuthorizationsV0 },
            { no: 2, name: "parameter_cooldown", kind: "message", T: () => AccessStructure },
            { no: 3, name: "parameter_time", kind: "message", T: () => AccessStructure }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.AuthorizationsV1
 */
export const AuthorizationsV1 = new AuthorizationsV1$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Description$Type extends MessageType {
    constructor() {
        super("concordium.v2.Description", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "description", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.Description
 */
export const Description = new Description$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ArInfo$Type extends MessageType {
    constructor() {
        super("concordium.v2.ArInfo", [
            { no: 1, name: "identity", kind: "message", T: () => ArInfo_ArIdentity },
            { no: 2, name: "description", kind: "message", T: () => Description },
            { no: 3, name: "public_key", kind: "message", T: () => ArInfo_ArPublicKey }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.ArInfo
 */
export const ArInfo = new ArInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ArInfo_ArIdentity$Type extends MessageType {
    constructor() {
        super("concordium.v2.ArInfo.ArIdentity", [
            { no: 1, name: "value", kind: "scalar", T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.ArInfo.ArIdentity
 */
export const ArInfo_ArIdentity = new ArInfo_ArIdentity$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ArInfo_ArPublicKey$Type extends MessageType {
    constructor() {
        super("concordium.v2.ArInfo.ArPublicKey", [
            { no: 1, name: "value", kind: "scalar", T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.ArInfo.ArPublicKey
 */
export const ArInfo_ArPublicKey = new ArInfo_ArPublicKey$Type();
// @generated message type with reflection information, may provide speed optimized methods
class IpIdentity$Type extends MessageType {
    constructor() {
        super("concordium.v2.IpIdentity", [
            { no: 1, name: "value", kind: "scalar", T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.IpIdentity
 */
export const IpIdentity = new IpIdentity$Type();
// @generated message type with reflection information, may provide speed optimized methods
class IpInfo$Type extends MessageType {
    constructor() {
        super("concordium.v2.IpInfo", [
            { no: 1, name: "identity", kind: "message", T: () => IpIdentity },
            { no: 2, name: "description", kind: "message", T: () => Description },
            { no: 3, name: "verify_key", kind: "message", T: () => IpInfo_IpVerifyKey },
            { no: 4, name: "cdi_verify_key", kind: "message", T: () => IpInfo_IpCdiVerifyKey }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.IpInfo
 */
export const IpInfo = new IpInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class IpInfo_IpVerifyKey$Type extends MessageType {
    constructor() {
        super("concordium.v2.IpInfo.IpVerifyKey", [
            { no: 1, name: "value", kind: "scalar", T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.IpInfo.IpVerifyKey
 */
export const IpInfo_IpVerifyKey = new IpInfo_IpVerifyKey$Type();
// @generated message type with reflection information, may provide speed optimized methods
class IpInfo_IpCdiVerifyKey$Type extends MessageType {
    constructor() {
        super("concordium.v2.IpInfo.IpCdiVerifyKey", [
            { no: 1, name: "value", kind: "scalar", T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.IpInfo.IpCdiVerifyKey
 */
export const IpInfo_IpCdiVerifyKey = new IpInfo_IpCdiVerifyKey$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DurationSeconds$Type extends MessageType {
    constructor() {
        super("concordium.v2.DurationSeconds", [
            { no: 1, name: "value", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.DurationSeconds
 */
export const DurationSeconds = new DurationSeconds$Type();
// @generated message type with reflection information, may provide speed optimized methods
class InclusiveRangeAmountFraction$Type extends MessageType {
    constructor() {
        super("concordium.v2.InclusiveRangeAmountFraction", [
            { no: 1, name: "min", kind: "message", T: () => AmountFraction },
            { no: 2, name: "max_", kind: "message", T: () => AmountFraction }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.InclusiveRangeAmountFraction
 */
export const InclusiveRangeAmountFraction = new InclusiveRangeAmountFraction$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CommissionRanges$Type extends MessageType {
    constructor() {
        super("concordium.v2.CommissionRanges", [
            { no: 1, name: "finalization", kind: "message", T: () => InclusiveRangeAmountFraction },
            { no: 2, name: "baking", kind: "message", T: () => InclusiveRangeAmountFraction },
            { no: 3, name: "transaction", kind: "message", T: () => InclusiveRangeAmountFraction }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.CommissionRanges
 */
export const CommissionRanges = new CommissionRanges$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CapitalBound$Type extends MessageType {
    constructor() {
        super("concordium.v2.CapitalBound", [
            { no: 1, name: "value", kind: "message", T: () => AmountFraction }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.CapitalBound
 */
export const CapitalBound = new CapitalBound$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LeverageFactor$Type extends MessageType {
    constructor() {
        super("concordium.v2.LeverageFactor", [
            { no: 1, name: "value", kind: "message", T: () => Ratio }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.LeverageFactor
 */
export const LeverageFactor = new LeverageFactor$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Epoch$Type extends MessageType {
    constructor() {
        super("concordium.v2.Epoch", [
            { no: 1, name: "value", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.Epoch
 */
export const Epoch = new Epoch$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Round$Type extends MessageType {
    constructor() {
        super("concordium.v2.Round", [
            { no: 1, name: "value", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.Round
 */
export const Round = new Round$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RewardPeriodLength$Type extends MessageType {
    constructor() {
        super("concordium.v2.RewardPeriodLength", [
            { no: 1, name: "value", kind: "message", T: () => Epoch }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.RewardPeriodLength
 */
export const RewardPeriodLength = new RewardPeriodLength$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MintRate$Type extends MessageType {
    constructor() {
        super("concordium.v2.MintRate", [
            { no: 1, name: "mantissa", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 2, name: "exponent", kind: "scalar", T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.MintRate
 */
export const MintRate = new MintRate$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CooldownParametersCpv1$Type extends MessageType {
    constructor() {
        super("concordium.v2.CooldownParametersCpv1", [
            { no: 1, name: "pool_owner_cooldown", kind: "message", T: () => DurationSeconds },
            { no: 2, name: "delegator_cooldown", kind: "message", T: () => DurationSeconds }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.CooldownParametersCpv1
 */
export const CooldownParametersCpv1 = new CooldownParametersCpv1$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PoolParametersCpv1$Type extends MessageType {
    constructor() {
        super("concordium.v2.PoolParametersCpv1", [
            { no: 1, name: "passive_finalization_commission", kind: "message", T: () => AmountFraction },
            { no: 2, name: "passive_baking_commission", kind: "message", T: () => AmountFraction },
            { no: 3, name: "passive_transaction_commission", kind: "message", T: () => AmountFraction },
            { no: 4, name: "commission_bounds", kind: "message", T: () => CommissionRanges },
            { no: 5, name: "minimum_equity_capital", kind: "message", T: () => Amount },
            { no: 6, name: "capital_bound", kind: "message", T: () => CapitalBound },
            { no: 7, name: "leverage_bound", kind: "message", T: () => LeverageFactor }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.PoolParametersCpv1
 */
export const PoolParametersCpv1 = new PoolParametersCpv1$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TimeParametersCpv1$Type extends MessageType {
    constructor() {
        super("concordium.v2.TimeParametersCpv1", [
            { no: 1, name: "reward_period_length", kind: "message", T: () => RewardPeriodLength },
            { no: 2, name: "mint_per_payday", kind: "message", T: () => MintRate }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.TimeParametersCpv1
 */
export const TimeParametersCpv1 = new TimeParametersCpv1$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MintDistributionCpv1$Type extends MessageType {
    constructor() {
        super("concordium.v2.MintDistributionCpv1", [
            { no: 1, name: "baking_reward", kind: "message", T: () => AmountFraction },
            { no: 2, name: "finalization_reward", kind: "message", T: () => AmountFraction }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.MintDistributionCpv1
 */
export const MintDistributionCpv1 = new MintDistributionCpv1$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ProtocolUpdate$Type extends MessageType {
    constructor() {
        super("concordium.v2.ProtocolUpdate", [
            { no: 1, name: "message_", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "specification_url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "specificationHash", kind: "message", T: () => Sha256Hash },
            { no: 4, name: "specification_auxiliary_data", kind: "scalar", T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.ProtocolUpdate
 */
export const ProtocolUpdate = new ProtocolUpdate$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MintDistributionCpv0$Type extends MessageType {
    constructor() {
        super("concordium.v2.MintDistributionCpv0", [
            { no: 1, name: "mint_per_slot", kind: "message", T: () => MintRate },
            { no: 2, name: "baking_reward", kind: "message", T: () => AmountFraction },
            { no: 3, name: "finalization_reward", kind: "message", T: () => AmountFraction }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.MintDistributionCpv0
 */
export const MintDistributionCpv0 = new MintDistributionCpv0$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TransactionFeeDistribution$Type extends MessageType {
    constructor() {
        super("concordium.v2.TransactionFeeDistribution", [
            { no: 1, name: "baker", kind: "message", T: () => AmountFraction },
            { no: 2, name: "gas_account", kind: "message", T: () => AmountFraction }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.TransactionFeeDistribution
 */
export const TransactionFeeDistribution = new TransactionFeeDistribution$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GasRewards$Type extends MessageType {
    constructor() {
        super("concordium.v2.GasRewards", [
            { no: 1, name: "baker", kind: "message", T: () => AmountFraction },
            { no: 2, name: "finalization_proof", kind: "message", T: () => AmountFraction },
            { no: 3, name: "account_creation", kind: "message", T: () => AmountFraction },
            { no: 4, name: "chain_update", kind: "message", T: () => AmountFraction }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.GasRewards
 */
export const GasRewards = new GasRewards$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GasRewardsCpv2$Type extends MessageType {
    constructor() {
        super("concordium.v2.GasRewardsCpv2", [
            { no: 1, name: "baker", kind: "message", T: () => AmountFraction },
            { no: 3, name: "account_creation", kind: "message", T: () => AmountFraction },
            { no: 4, name: "chain_update", kind: "message", T: () => AmountFraction }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.GasRewardsCpv2
 */
export const GasRewardsCpv2 = new GasRewardsCpv2$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BakerStakeThreshold$Type extends MessageType {
    constructor() {
        super("concordium.v2.BakerStakeThreshold", [
            { no: 1, name: "baker_stake_threshold", kind: "message", T: () => Amount }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.BakerStakeThreshold
 */
export const BakerStakeThreshold = new BakerStakeThreshold$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RootUpdate$Type extends MessageType {
    constructor() {
        super("concordium.v2.RootUpdate", [
            { no: 1, name: "root_keys_update", kind: "message", oneof: "updateType", T: () => HigherLevelKeys },
            { no: 2, name: "level_1_keys_update", kind: "message", oneof: "updateType", T: () => HigherLevelKeys },
            { no: 3, name: "level_2_keys_update_v0", kind: "message", oneof: "updateType", T: () => AuthorizationsV0 },
            { no: 4, name: "level_2_keys_update_v1", kind: "message", oneof: "updateType", T: () => AuthorizationsV1 }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.RootUpdate
 */
export const RootUpdate = new RootUpdate$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Level1Update$Type extends MessageType {
    constructor() {
        super("concordium.v2.Level1Update", [
            { no: 1, name: "level_1_keys_update", kind: "message", oneof: "updateType", T: () => HigherLevelKeys },
            { no: 2, name: "level_2_keys_update_v0", kind: "message", oneof: "updateType", T: () => AuthorizationsV0 },
            { no: 3, name: "level_2_keys_update_v1", kind: "message", oneof: "updateType", T: () => AuthorizationsV1 }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.Level1Update
 */
export const Level1Update = new Level1Update$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UpdatePayload$Type extends MessageType {
    constructor() {
        super("concordium.v2.UpdatePayload", [
            { no: 1, name: "protocol_update", kind: "message", oneof: "payload", T: () => ProtocolUpdate },
            { no: 2, name: "election_difficulty_update", kind: "message", oneof: "payload", T: () => ElectionDifficulty },
            { no: 3, name: "euro_per_energy_update", kind: "message", oneof: "payload", T: () => ExchangeRate },
            { no: 4, name: "micro_ccd_per_euro_update", kind: "message", oneof: "payload", T: () => ExchangeRate },
            { no: 5, name: "foundation_account_update", kind: "message", oneof: "payload", T: () => AccountAddress },
            { no: 6, name: "mint_distribution_update", kind: "message", oneof: "payload", T: () => MintDistributionCpv0 },
            { no: 7, name: "transaction_fee_distribution_update", kind: "message", oneof: "payload", T: () => TransactionFeeDistribution },
            { no: 8, name: "gas_rewards_update", kind: "message", oneof: "payload", T: () => GasRewards },
            { no: 9, name: "baker_stake_threshold_update", kind: "message", oneof: "payload", T: () => BakerStakeThreshold },
            { no: 10, name: "root_update", kind: "message", oneof: "payload", T: () => RootUpdate },
            { no: 11, name: "level_1_update", kind: "message", oneof: "payload", T: () => Level1Update },
            { no: 12, name: "add_anonymity_revoker_update", kind: "message", oneof: "payload", T: () => ArInfo },
            { no: 13, name: "add_identity_provider_update", kind: "message", oneof: "payload", T: () => IpInfo },
            { no: 14, name: "cooldown_parameters_cpv_1_update", kind: "message", oneof: "payload", T: () => CooldownParametersCpv1 },
            { no: 15, name: "pool_parameters_cpv_1_update", kind: "message", oneof: "payload", T: () => PoolParametersCpv1 },
            { no: 16, name: "time_parameters_cpv_1_update", kind: "message", oneof: "payload", T: () => TimeParametersCpv1 },
            { no: 17, name: "mint_distribution_cpv_1_update", kind: "message", oneof: "payload", T: () => MintDistributionCpv1 },
            { no: 18, name: "gas_rewards_cpv_2_update", kind: "message", oneof: "payload", T: () => GasRewardsCpv2 },
            { no: 19, name: "timeout_parameters_update", kind: "message", oneof: "payload", T: () => TimeoutParameters },
            { no: 20, name: "min_block_time_update", kind: "message", oneof: "payload", T: () => Duration },
            { no: 21, name: "block_energy_limit_update", kind: "message", oneof: "payload", T: () => Energy },
            { no: 22, name: "finalization_committee_parameters_update", kind: "message", oneof: "payload", T: () => FinalizationCommitteeParameters }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.UpdatePayload
 */
export const UpdatePayload = new UpdatePayload$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AccountTransactionDetails$Type extends MessageType {
    constructor() {
        super("concordium.v2.AccountTransactionDetails", [
            { no: 1, name: "cost", kind: "message", T: () => Amount },
            { no: 2, name: "sender", kind: "message", T: () => AccountAddress },
            { no: 3, name: "effects", kind: "message", T: () => AccountTransactionEffects }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.AccountTransactionDetails
 */
export const AccountTransactionDetails = new AccountTransactionDetails$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AccountCreationDetails$Type extends MessageType {
    constructor() {
        super("concordium.v2.AccountCreationDetails", [
            { no: 1, name: "credential_type", kind: "enum", T: () => ["concordium.v2.CredentialType", CredentialType, "CREDENTIAL_TYPE_"] },
            { no: 2, name: "address", kind: "message", T: () => AccountAddress },
            { no: 3, name: "reg_id", kind: "message", T: () => CredentialRegistrationId }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.AccountCreationDetails
 */
export const AccountCreationDetails = new AccountCreationDetails$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TransactionTime$Type extends MessageType {
    constructor() {
        super("concordium.v2.TransactionTime", [
            { no: 1, name: "value", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.TransactionTime
 */
export const TransactionTime = new TransactionTime$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UpdateDetails$Type extends MessageType {
    constructor() {
        super("concordium.v2.UpdateDetails", [
            { no: 1, name: "effective_time", kind: "message", T: () => TransactionTime },
            { no: 2, name: "payload", kind: "message", T: () => UpdatePayload }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.UpdateDetails
 */
export const UpdateDetails = new UpdateDetails$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BlockItemSummary$Type extends MessageType {
    constructor() {
        super("concordium.v2.BlockItemSummary", [
            { no: 1, name: "index", kind: "message", T: () => BlockItemSummary_TransactionIndex },
            { no: 2, name: "energy_cost", kind: "message", T: () => Energy },
            { no: 3, name: "hash", kind: "message", T: () => TransactionHash },
            { no: 4, name: "account_transaction", kind: "message", oneof: "details", T: () => AccountTransactionDetails },
            { no: 5, name: "account_creation", kind: "message", oneof: "details", T: () => AccountCreationDetails },
            { no: 6, name: "update", kind: "message", oneof: "details", T: () => UpdateDetails }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.BlockItemSummary
 */
export const BlockItemSummary = new BlockItemSummary$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BlockItemSummary_TransactionIndex$Type extends MessageType {
    constructor() {
        super("concordium.v2.BlockItemSummary.TransactionIndex", [
            { no: 1, name: "value", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.BlockItemSummary.TransactionIndex
 */
export const BlockItemSummary_TransactionIndex = new BlockItemSummary_TransactionIndex$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GenesisIndex$Type extends MessageType {
    constructor() {
        super("concordium.v2.GenesisIndex", [
            { no: 1, name: "value", kind: "scalar", T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.GenesisIndex
 */
export const GenesisIndex = new GenesisIndex$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ConsensusInfo$Type extends MessageType {
    constructor() {
        super("concordium.v2.ConsensusInfo", [
            { no: 1, name: "best_block", kind: "message", T: () => BlockHash },
            { no: 2, name: "genesis_block", kind: "message", T: () => BlockHash },
            { no: 3, name: "genesis_time", kind: "message", T: () => Timestamp },
            { no: 4, name: "slot_duration", kind: "message", T: () => Duration },
            { no: 5, name: "epoch_duration", kind: "message", T: () => Duration },
            { no: 6, name: "last_finalized_block", kind: "message", T: () => BlockHash },
            { no: 7, name: "best_block_height", kind: "message", T: () => AbsoluteBlockHeight },
            { no: 8, name: "last_finalized_block_height", kind: "message", T: () => AbsoluteBlockHeight },
            { no: 9, name: "blocks_received_count", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 10, name: "block_last_received_time", kind: "message", T: () => Timestamp },
            { no: 11, name: "block_receive_latency_ema", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 12, name: "block_receive_latency_emsd", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 13, name: "block_receive_period_ema", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 14, name: "block_receive_period_emsd", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 15, name: "blocks_verified_count", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 16, name: "block_last_arrived_time", kind: "message", T: () => Timestamp },
            { no: 17, name: "block_arrive_latency_ema", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 18, name: "block_arrive_latency_emsd", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 19, name: "block_arrive_period_ema", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 20, name: "block_arrive_period_emsd", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 21, name: "transactions_per_block_ema", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 22, name: "transactions_per_block_emsd", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 23, name: "finalization_count", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 24, name: "last_finalized_time", kind: "message", T: () => Timestamp },
            { no: 25, name: "finalization_period_ema", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 26, name: "finalization_period_emsd", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 27, name: "protocol_version", kind: "enum", T: () => ["concordium.v2.ProtocolVersion", ProtocolVersion] },
            { no: 28, name: "genesis_index", kind: "message", T: () => GenesisIndex },
            { no: 29, name: "current_era_genesis_block", kind: "message", T: () => BlockHash },
            { no: 30, name: "current_era_genesis_time", kind: "message", T: () => Timestamp },
            { no: 31, name: "current_timeout_duration", kind: "message", T: () => Duration },
            { no: 32, name: "current_round", kind: "message", T: () => Round },
            { no: 33, name: "current_epoch", kind: "message", T: () => Epoch },
            { no: 34, name: "trigger_block_time", kind: "message", T: () => Timestamp }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.ConsensusInfo
 */
export const ConsensusInfo = new ConsensusInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ArrivedBlockInfo$Type extends MessageType {
    constructor() {
        super("concordium.v2.ArrivedBlockInfo", [
            { no: 1, name: "hash", kind: "message", T: () => BlockHash },
            { no: 2, name: "height", kind: "message", T: () => AbsoluteBlockHeight }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.ArrivedBlockInfo
 */
export const ArrivedBlockInfo = new ArrivedBlockInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CryptographicParameters$Type extends MessageType {
    constructor() {
        super("concordium.v2.CryptographicParameters", [
            { no: 1, name: "genesis_string", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "bulletproof_generators", kind: "scalar", T: 12 /*ScalarType.BYTES*/ },
            { no: 3, name: "on_chain_commitment_key", kind: "scalar", T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.CryptographicParameters
 */
export const CryptographicParameters = new CryptographicParameters$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BlockInfo$Type extends MessageType {
    constructor() {
        super("concordium.v2.BlockInfo", [
            { no: 1, name: "hash", kind: "message", T: () => BlockHash },
            { no: 2, name: "height", kind: "message", T: () => AbsoluteBlockHeight },
            { no: 3, name: "parent_block", kind: "message", T: () => BlockHash },
            { no: 4, name: "last_finalized_block", kind: "message", T: () => BlockHash },
            { no: 5, name: "genesis_index", kind: "message", T: () => GenesisIndex },
            { no: 6, name: "era_block_height", kind: "message", T: () => BlockHeight },
            { no: 7, name: "receive_time", kind: "message", T: () => Timestamp },
            { no: 8, name: "arrive_time", kind: "message", T: () => Timestamp },
            { no: 9, name: "slot_number", kind: "message", T: () => Slot },
            { no: 10, name: "slot_time", kind: "message", T: () => Timestamp },
            { no: 11, name: "baker", kind: "message", T: () => BakerId },
            { no: 12, name: "finalized", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 13, name: "transaction_count", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 14, name: "transactions_energy_cost", kind: "message", T: () => Energy },
            { no: 15, name: "transactions_size", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 16, name: "state_hash", kind: "message", T: () => StateHash },
            { no: 17, name: "protocol_version", kind: "enum", T: () => ["concordium.v2.ProtocolVersion", ProtocolVersion] },
            { no: 18, name: "round", kind: "message", T: () => Round },
            { no: 19, name: "epoch", kind: "message", T: () => Epoch }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.BlockInfo
 */
export const BlockInfo = new BlockInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PoolInfoRequest$Type extends MessageType {
    constructor() {
        super("concordium.v2.PoolInfoRequest", [
            { no: 1, name: "block_hash", kind: "message", T: () => BlockHashInput },
            { no: 2, name: "baker", kind: "message", T: () => BakerId }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.PoolInfoRequest
 */
export const PoolInfoRequest = new PoolInfoRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PoolPendingChange$Type extends MessageType {
    constructor() {
        super("concordium.v2.PoolPendingChange", [
            { no: 1, name: "reduce", kind: "message", oneof: "change", T: () => PoolPendingChange_Reduce },
            { no: 2, name: "remove", kind: "message", oneof: "change", T: () => PoolPendingChange_Remove }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.PoolPendingChange
 */
export const PoolPendingChange = new PoolPendingChange$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PoolPendingChange_Reduce$Type extends MessageType {
    constructor() {
        super("concordium.v2.PoolPendingChange.Reduce", [
            { no: 1, name: "reduced_equity_capital", kind: "message", T: () => Amount },
            { no: 2, name: "effective_time", kind: "message", T: () => Timestamp }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.PoolPendingChange.Reduce
 */
export const PoolPendingChange_Reduce = new PoolPendingChange_Reduce$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PoolPendingChange_Remove$Type extends MessageType {
    constructor() {
        super("concordium.v2.PoolPendingChange.Remove", [
            { no: 1, name: "effective_time", kind: "message", T: () => Timestamp }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.PoolPendingChange.Remove
 */
export const PoolPendingChange_Remove = new PoolPendingChange_Remove$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PoolCurrentPaydayInfo$Type extends MessageType {
    constructor() {
        super("concordium.v2.PoolCurrentPaydayInfo", [
            { no: 1, name: "blocks_baked", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "finalization_live", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 3, name: "transaction_fees_earned", kind: "message", T: () => Amount },
            { no: 4, name: "effective_stake", kind: "message", T: () => Amount },
            { no: 5, name: "lottery_power", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 6, name: "baker_equity_capital", kind: "message", T: () => Amount },
            { no: 7, name: "delegated_capital", kind: "message", T: () => Amount },
            { no: 8, name: "commission_rates", kind: "message", T: () => CommissionRates }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.PoolCurrentPaydayInfo
 */
export const PoolCurrentPaydayInfo = new PoolCurrentPaydayInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PoolInfoResponse$Type extends MessageType {
    constructor() {
        super("concordium.v2.PoolInfoResponse", [
            { no: 1, name: "baker", kind: "message", T: () => BakerId },
            { no: 2, name: "address", kind: "message", T: () => AccountAddress },
            { no: 3, name: "equity_capital", kind: "message", T: () => Amount },
            { no: 4, name: "delegated_capital", kind: "message", T: () => Amount },
            { no: 5, name: "delegated_capital_cap", kind: "message", T: () => Amount },
            { no: 6, name: "pool_info", kind: "message", T: () => BakerPoolInfo },
            { no: 7, name: "equity_pending_change", kind: "message", T: () => PoolPendingChange },
            { no: 8, name: "current_payday_info", kind: "message", T: () => PoolCurrentPaydayInfo },
            { no: 9, name: "all_pool_total_capital", kind: "message", T: () => Amount }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.PoolInfoResponse
 */
export const PoolInfoResponse = new PoolInfoResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PassiveDelegationInfo$Type extends MessageType {
    constructor() {
        super("concordium.v2.PassiveDelegationInfo", [
            { no: 1, name: "delegated_capital", kind: "message", T: () => Amount },
            { no: 2, name: "commission_rates", kind: "message", T: () => CommissionRates },
            { no: 3, name: "current_payday_transaction_fees_earned", kind: "message", T: () => Amount },
            { no: 4, name: "current_payday_delegated_capital", kind: "message", T: () => Amount },
            { no: 5, name: "all_pool_total_capital", kind: "message", T: () => Amount }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.PassiveDelegationInfo
 */
export const PassiveDelegationInfo = new PassiveDelegationInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BlocksAtHeightRequest$Type extends MessageType {
    constructor() {
        super("concordium.v2.BlocksAtHeightRequest", [
            { no: 1, name: "absolute", kind: "message", oneof: "blocksAtHeight", T: () => BlocksAtHeightRequest_Absolute },
            { no: 2, name: "relative", kind: "message", oneof: "blocksAtHeight", T: () => BlocksAtHeightRequest_Relative }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.BlocksAtHeightRequest
 */
export const BlocksAtHeightRequest = new BlocksAtHeightRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BlocksAtHeightRequest_Absolute$Type extends MessageType {
    constructor() {
        super("concordium.v2.BlocksAtHeightRequest.Absolute", [
            { no: 1, name: "height", kind: "message", T: () => AbsoluteBlockHeight }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.BlocksAtHeightRequest.Absolute
 */
export const BlocksAtHeightRequest_Absolute = new BlocksAtHeightRequest_Absolute$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BlocksAtHeightRequest_Relative$Type extends MessageType {
    constructor() {
        super("concordium.v2.BlocksAtHeightRequest.Relative", [
            { no: 1, name: "genesis_index", kind: "message", T: () => GenesisIndex },
            { no: 2, name: "height", kind: "message", T: () => BlockHeight },
            { no: 3, name: "restrict", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.BlocksAtHeightRequest.Relative
 */
export const BlocksAtHeightRequest_Relative = new BlocksAtHeightRequest_Relative$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BlocksAtHeightResponse$Type extends MessageType {
    constructor() {
        super("concordium.v2.BlocksAtHeightResponse", [
            { no: 1, name: "blocks", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => BlockHash }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.BlocksAtHeightResponse
 */
export const BlocksAtHeightResponse = new BlocksAtHeightResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TokenomicsInfo$Type extends MessageType {
    constructor() {
        super("concordium.v2.TokenomicsInfo", [
            { no: 1, name: "v0", kind: "message", oneof: "tokenomics", T: () => TokenomicsInfo_V0 },
            { no: 2, name: "v1", kind: "message", oneof: "tokenomics", T: () => TokenomicsInfo_V1 }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.TokenomicsInfo
 */
export const TokenomicsInfo = new TokenomicsInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TokenomicsInfo_V0$Type extends MessageType {
    constructor() {
        super("concordium.v2.TokenomicsInfo.V0", [
            { no: 1, name: "total_amount", kind: "message", T: () => Amount },
            { no: 2, name: "total_encrypted_amount", kind: "message", T: () => Amount },
            { no: 3, name: "baking_reward_account", kind: "message", T: () => Amount },
            { no: 4, name: "finalization_reward_account", kind: "message", T: () => Amount },
            { no: 5, name: "gas_account", kind: "message", T: () => Amount },
            { no: 6, name: "protocol_version", kind: "enum", T: () => ["concordium.v2.ProtocolVersion", ProtocolVersion] }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.TokenomicsInfo.V0
 */
export const TokenomicsInfo_V0 = new TokenomicsInfo_V0$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TokenomicsInfo_V1$Type extends MessageType {
    constructor() {
        super("concordium.v2.TokenomicsInfo.V1", [
            { no: 1, name: "total_amount", kind: "message", T: () => Amount },
            { no: 2, name: "total_encrypted_amount", kind: "message", T: () => Amount },
            { no: 3, name: "baking_reward_account", kind: "message", T: () => Amount },
            { no: 4, name: "finalization_reward_account", kind: "message", T: () => Amount },
            { no: 5, name: "gas_account", kind: "message", T: () => Amount },
            { no: 6, name: "foundation_transaction_rewards", kind: "message", T: () => Amount },
            { no: 7, name: "next_payday_time", kind: "message", T: () => Timestamp },
            { no: 8, name: "next_payday_mint_rate", kind: "message", T: () => MintRate },
            { no: 9, name: "total_staked_capital", kind: "message", T: () => Amount },
            { no: 10, name: "protocol_version", kind: "enum", T: () => ["concordium.v2.ProtocolVersion", ProtocolVersion] }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.TokenomicsInfo.V1
 */
export const TokenomicsInfo_V1 = new TokenomicsInfo_V1$Type();
// @generated message type with reflection information, may provide speed optimized methods
class InvokeInstanceRequest$Type extends MessageType {
    constructor() {
        super("concordium.v2.InvokeInstanceRequest", [
            { no: 1, name: "block_hash", kind: "message", T: () => BlockHashInput },
            { no: 2, name: "invoker", kind: "message", T: () => Address },
            { no: 3, name: "instance", kind: "message", T: () => ContractAddress },
            { no: 4, name: "amount", kind: "message", T: () => Amount },
            { no: 5, name: "entrypoint", kind: "message", T: () => ReceiveName },
            { no: 6, name: "parameter", kind: "message", T: () => Parameter },
            { no: 7, name: "energy", kind: "message", T: () => Energy }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.InvokeInstanceRequest
 */
export const InvokeInstanceRequest = new InvokeInstanceRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class InvokeInstanceResponse$Type extends MessageType {
    constructor() {
        super("concordium.v2.InvokeInstanceResponse", [
            { no: 1, name: "success", kind: "message", oneof: "result", T: () => InvokeInstanceResponse_Success },
            { no: 2, name: "failure", kind: "message", oneof: "result", T: () => InvokeInstanceResponse_Failure }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.InvokeInstanceResponse
 */
export const InvokeInstanceResponse = new InvokeInstanceResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class InvokeInstanceResponse_Failure$Type extends MessageType {
    constructor() {
        super("concordium.v2.InvokeInstanceResponse.Failure", [
            { no: 1, name: "return_value", kind: "scalar", opt: true, T: 12 /*ScalarType.BYTES*/ },
            { no: 2, name: "used_energy", kind: "message", T: () => Energy },
            { no: 3, name: "reason", kind: "message", T: () => RejectReason }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.InvokeInstanceResponse.Failure
 */
export const InvokeInstanceResponse_Failure = new InvokeInstanceResponse_Failure$Type();
// @generated message type with reflection information, may provide speed optimized methods
class InvokeInstanceResponse_Success$Type extends MessageType {
    constructor() {
        super("concordium.v2.InvokeInstanceResponse.Success", [
            { no: 1, name: "return_value", kind: "scalar", opt: true, T: 12 /*ScalarType.BYTES*/ },
            { no: 2, name: "used_energy", kind: "message", T: () => Energy },
            { no: 3, name: "effects", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ContractTraceElement }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.InvokeInstanceResponse.Success
 */
export const InvokeInstanceResponse_Success = new InvokeInstanceResponse_Success$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetPoolDelegatorsRequest$Type extends MessageType {
    constructor() {
        super("concordium.v2.GetPoolDelegatorsRequest", [
            { no: 1, name: "block_hash", kind: "message", T: () => BlockHashInput },
            { no: 2, name: "baker", kind: "message", T: () => BakerId }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.GetPoolDelegatorsRequest
 */
export const GetPoolDelegatorsRequest = new GetPoolDelegatorsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DelegatorInfo$Type extends MessageType {
    constructor() {
        super("concordium.v2.DelegatorInfo", [
            { no: 1, name: "account", kind: "message", T: () => AccountAddress },
            { no: 2, name: "stake", kind: "message", T: () => Amount },
            { no: 3, name: "pending_change", kind: "message", T: () => StakePendingChange }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.DelegatorInfo
 */
export const DelegatorInfo = new DelegatorInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DelegatorRewardPeriodInfo$Type extends MessageType {
    constructor() {
        super("concordium.v2.DelegatorRewardPeriodInfo", [
            { no: 1, name: "account", kind: "message", T: () => AccountAddress },
            { no: 2, name: "stake", kind: "message", T: () => Amount }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.DelegatorRewardPeriodInfo
 */
export const DelegatorRewardPeriodInfo = new DelegatorRewardPeriodInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Branch$Type extends MessageType {
    constructor() {
        super("concordium.v2.Branch", [
            { no: 1, name: "block_hash", kind: "message", T: () => BlockHash },
            { no: 2, name: "children", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Branch }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.Branch
 */
export const Branch = new Branch$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LeadershipElectionNonce$Type extends MessageType {
    constructor() {
        super("concordium.v2.LeadershipElectionNonce", [
            { no: 1, name: "value", kind: "scalar", T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.LeadershipElectionNonce
 */
export const LeadershipElectionNonce = new LeadershipElectionNonce$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ElectionInfo$Type extends MessageType {
    constructor() {
        super("concordium.v2.ElectionInfo", [
            { no: 1, name: "election_difficulty", kind: "message", T: () => ElectionDifficulty },
            { no: 2, name: "election_nonce", kind: "message", T: () => LeadershipElectionNonce },
            { no: 3, name: "baker_election_info", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ElectionInfo_Baker }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.ElectionInfo
 */
export const ElectionInfo = new ElectionInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ElectionInfo_Baker$Type extends MessageType {
    constructor() {
        super("concordium.v2.ElectionInfo.Baker", [
            { no: 1, name: "baker", kind: "message", T: () => BakerId },
            { no: 2, name: "account", kind: "message", T: () => AccountAddress },
            { no: 3, name: "lottery_power", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.ElectionInfo.Baker
 */
export const ElectionInfo_Baker = new ElectionInfo_Baker$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BlockSpecialEvent$Type extends MessageType {
    constructor() {
        super("concordium.v2.BlockSpecialEvent", [
            { no: 1, name: "baking_rewards", kind: "message", oneof: "event", T: () => BlockSpecialEvent_BakingRewards },
            { no: 2, name: "mint", kind: "message", oneof: "event", T: () => BlockSpecialEvent_Mint },
            { no: 3, name: "finalization_rewards", kind: "message", oneof: "event", T: () => BlockSpecialEvent_FinalizationRewards },
            { no: 4, name: "block_reward", kind: "message", oneof: "event", T: () => BlockSpecialEvent_BlockReward },
            { no: 5, name: "payday_foundation_reward", kind: "message", oneof: "event", T: () => BlockSpecialEvent_PaydayFoundationReward },
            { no: 6, name: "payday_account_reward", kind: "message", oneof: "event", T: () => BlockSpecialEvent_PaydayAccountReward },
            { no: 7, name: "block_accrue_reward", kind: "message", oneof: "event", T: () => BlockSpecialEvent_BlockAccrueReward },
            { no: 8, name: "payday_pool_reward", kind: "message", oneof: "event", T: () => BlockSpecialEvent_PaydayPoolReward }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.BlockSpecialEvent
 */
export const BlockSpecialEvent = new BlockSpecialEvent$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BlockSpecialEvent_AccountAmounts$Type extends MessageType {
    constructor() {
        super("concordium.v2.BlockSpecialEvent.AccountAmounts", [
            { no: 1, name: "entries", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => BlockSpecialEvent_AccountAmounts_Entry }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.BlockSpecialEvent.AccountAmounts
 */
export const BlockSpecialEvent_AccountAmounts = new BlockSpecialEvent_AccountAmounts$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BlockSpecialEvent_AccountAmounts_Entry$Type extends MessageType {
    constructor() {
        super("concordium.v2.BlockSpecialEvent.AccountAmounts.Entry", [
            { no: 1, name: "account", kind: "message", T: () => AccountAddress },
            { no: 2, name: "amount", kind: "message", T: () => Amount }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.BlockSpecialEvent.AccountAmounts.Entry
 */
export const BlockSpecialEvent_AccountAmounts_Entry = new BlockSpecialEvent_AccountAmounts_Entry$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BlockSpecialEvent_BakingRewards$Type extends MessageType {
    constructor() {
        super("concordium.v2.BlockSpecialEvent.BakingRewards", [
            { no: 1, name: "baker_rewards", kind: "message", T: () => BlockSpecialEvent_AccountAmounts },
            { no: 2, name: "remainder", kind: "message", T: () => Amount }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.BlockSpecialEvent.BakingRewards
 */
export const BlockSpecialEvent_BakingRewards = new BlockSpecialEvent_BakingRewards$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BlockSpecialEvent_Mint$Type extends MessageType {
    constructor() {
        super("concordium.v2.BlockSpecialEvent.Mint", [
            { no: 1, name: "mint_baking_reward", kind: "message", T: () => Amount },
            { no: 2, name: "mint_finalization_reward", kind: "message", T: () => Amount },
            { no: 3, name: "mint_platform_development_charge", kind: "message", T: () => Amount },
            { no: 4, name: "foundation_account", kind: "message", T: () => AccountAddress }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.BlockSpecialEvent.Mint
 */
export const BlockSpecialEvent_Mint = new BlockSpecialEvent_Mint$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BlockSpecialEvent_FinalizationRewards$Type extends MessageType {
    constructor() {
        super("concordium.v2.BlockSpecialEvent.FinalizationRewards", [
            { no: 1, name: "finalization_rewards", kind: "message", T: () => BlockSpecialEvent_AccountAmounts },
            { no: 2, name: "remainder", kind: "message", T: () => Amount }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.BlockSpecialEvent.FinalizationRewards
 */
export const BlockSpecialEvent_FinalizationRewards = new BlockSpecialEvent_FinalizationRewards$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BlockSpecialEvent_BlockReward$Type extends MessageType {
    constructor() {
        super("concordium.v2.BlockSpecialEvent.BlockReward", [
            { no: 1, name: "transaction_fees", kind: "message", T: () => Amount },
            { no: 2, name: "old_gas_account", kind: "message", T: () => Amount },
            { no: 3, name: "new_gas_account", kind: "message", T: () => Amount },
            { no: 4, name: "baker_reward", kind: "message", T: () => Amount },
            { no: 5, name: "foundation_charge", kind: "message", T: () => Amount },
            { no: 6, name: "baker", kind: "message", T: () => AccountAddress },
            { no: 7, name: "foundation_account", kind: "message", T: () => AccountAddress }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.BlockSpecialEvent.BlockReward
 */
export const BlockSpecialEvent_BlockReward = new BlockSpecialEvent_BlockReward$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BlockSpecialEvent_PaydayFoundationReward$Type extends MessageType {
    constructor() {
        super("concordium.v2.BlockSpecialEvent.PaydayFoundationReward", [
            { no: 1, name: "foundation_account", kind: "message", T: () => AccountAddress },
            { no: 2, name: "development_charge", kind: "message", T: () => Amount }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.BlockSpecialEvent.PaydayFoundationReward
 */
export const BlockSpecialEvent_PaydayFoundationReward = new BlockSpecialEvent_PaydayFoundationReward$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BlockSpecialEvent_PaydayAccountReward$Type extends MessageType {
    constructor() {
        super("concordium.v2.BlockSpecialEvent.PaydayAccountReward", [
            { no: 1, name: "account", kind: "message", T: () => AccountAddress },
            { no: 2, name: "transaction_fees", kind: "message", T: () => Amount },
            { no: 3, name: "baker_reward", kind: "message", T: () => Amount },
            { no: 4, name: "finalization_reward", kind: "message", T: () => Amount }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.BlockSpecialEvent.PaydayAccountReward
 */
export const BlockSpecialEvent_PaydayAccountReward = new BlockSpecialEvent_PaydayAccountReward$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BlockSpecialEvent_BlockAccrueReward$Type extends MessageType {
    constructor() {
        super("concordium.v2.BlockSpecialEvent.BlockAccrueReward", [
            { no: 1, name: "transaction_fees", kind: "message", T: () => Amount },
            { no: 2, name: "old_gas_account", kind: "message", T: () => Amount },
            { no: 3, name: "new_gas_account", kind: "message", T: () => Amount },
            { no: 4, name: "baker_reward", kind: "message", T: () => Amount },
            { no: 5, name: "passive_reward", kind: "message", T: () => Amount },
            { no: 6, name: "foundation_charge", kind: "message", T: () => Amount },
            { no: 7, name: "baker", kind: "message", T: () => BakerId }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.BlockSpecialEvent.BlockAccrueReward
 */
export const BlockSpecialEvent_BlockAccrueReward = new BlockSpecialEvent_BlockAccrueReward$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BlockSpecialEvent_PaydayPoolReward$Type extends MessageType {
    constructor() {
        super("concordium.v2.BlockSpecialEvent.PaydayPoolReward", [
            { no: 1, name: "pool_owner", kind: "message", T: () => BakerId },
            { no: 2, name: "transaction_fees", kind: "message", T: () => Amount },
            { no: 3, name: "baker_reward", kind: "message", T: () => Amount },
            { no: 4, name: "finalization_reward", kind: "message", T: () => Amount }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.BlockSpecialEvent.PaydayPoolReward
 */
export const BlockSpecialEvent_PaydayPoolReward = new BlockSpecialEvent_PaydayPoolReward$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PendingUpdate$Type extends MessageType {
    constructor() {
        super("concordium.v2.PendingUpdate", [
            { no: 1, name: "effective_time", kind: "message", T: () => TransactionTime },
            { no: 2, name: "root_keys", kind: "message", oneof: "effect", T: () => HigherLevelKeys },
            { no: 3, name: "level1_keys", kind: "message", oneof: "effect", T: () => HigherLevelKeys },
            { no: 4, name: "level2_keys_cpv_0", kind: "message", oneof: "effect", T: () => AuthorizationsV0 },
            { no: 5, name: "level2_keys_cpv_1", kind: "message", oneof: "effect", T: () => AuthorizationsV1 },
            { no: 6, name: "protocol", kind: "message", oneof: "effect", T: () => ProtocolUpdate },
            { no: 7, name: "election_difficulty", kind: "message", oneof: "effect", T: () => ElectionDifficulty },
            { no: 8, name: "euro_per_energy", kind: "message", oneof: "effect", T: () => ExchangeRate },
            { no: 9, name: "micro_ccd_per_euro", kind: "message", oneof: "effect", T: () => ExchangeRate },
            { no: 10, name: "foundation_account", kind: "message", oneof: "effect", T: () => AccountAddress },
            { no: 11, name: "mint_distribution_cpv_0", kind: "message", oneof: "effect", T: () => MintDistributionCpv0 },
            { no: 12, name: "mint_distribution_cpv_1", kind: "message", oneof: "effect", T: () => MintDistributionCpv1 },
            { no: 13, name: "transaction_fee_distribution", kind: "message", oneof: "effect", T: () => TransactionFeeDistribution },
            { no: 14, name: "gas_rewards", kind: "message", oneof: "effect", T: () => GasRewards },
            { no: 15, name: "pool_parameters_cpv_0", kind: "message", oneof: "effect", T: () => BakerStakeThreshold },
            { no: 16, name: "pool_parameters_cpv_1", kind: "message", oneof: "effect", T: () => PoolParametersCpv1 },
            { no: 17, name: "add_anonymity_revoker", kind: "message", oneof: "effect", T: () => ArInfo },
            { no: 18, name: "add_identity_provider", kind: "message", oneof: "effect", T: () => IpInfo },
            { no: 19, name: "cooldown_parameters", kind: "message", oneof: "effect", T: () => CooldownParametersCpv1 },
            { no: 20, name: "time_parameters", kind: "message", oneof: "effect", T: () => TimeParametersCpv1 },
            { no: 21, name: "gas_rewards_cpv_2", kind: "message", oneof: "effect", T: () => GasRewardsCpv2 },
            { no: 22, name: "timeout_parameters", kind: "message", oneof: "effect", T: () => TimeoutParameters },
            { no: 23, name: "min_block_time", kind: "message", oneof: "effect", T: () => Duration },
            { no: 24, name: "block_energy_limit", kind: "message", oneof: "effect", T: () => Energy },
            { no: 25, name: "finalization_committee_parameters", kind: "message", oneof: "effect", T: () => FinalizationCommitteeParameters }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.PendingUpdate
 */
export const PendingUpdate = new PendingUpdate$Type();
// @generated message type with reflection information, may provide speed optimized methods
class NextUpdateSequenceNumbers$Type extends MessageType {
    constructor() {
        super("concordium.v2.NextUpdateSequenceNumbers", [
            { no: 1, name: "root_keys", kind: "message", T: () => SequenceNumber },
            { no: 2, name: "level1_keys", kind: "message", T: () => SequenceNumber },
            { no: 3, name: "level2_keys", kind: "message", T: () => SequenceNumber },
            { no: 4, name: "protocol", kind: "message", T: () => SequenceNumber },
            { no: 5, name: "election_difficulty", kind: "message", T: () => SequenceNumber },
            { no: 6, name: "euro_per_energy", kind: "message", T: () => SequenceNumber },
            { no: 7, name: "micro_ccd_per_euro", kind: "message", T: () => SequenceNumber },
            { no: 8, name: "foundation_account", kind: "message", T: () => SequenceNumber },
            { no: 9, name: "mint_distribution", kind: "message", T: () => SequenceNumber },
            { no: 10, name: "transaction_fee_distribution", kind: "message", T: () => SequenceNumber },
            { no: 11, name: "gas_rewards", kind: "message", T: () => SequenceNumber },
            { no: 12, name: "pool_parameters", kind: "message", T: () => SequenceNumber },
            { no: 13, name: "add_anonymity_revoker", kind: "message", T: () => SequenceNumber },
            { no: 14, name: "add_identity_provider", kind: "message", T: () => SequenceNumber },
            { no: 15, name: "cooldown_parameters", kind: "message", T: () => SequenceNumber },
            { no: 16, name: "time_parameters", kind: "message", T: () => SequenceNumber },
            { no: 17, name: "timeout_parameters", kind: "message", T: () => SequenceNumber },
            { no: 18, name: "min_block_time", kind: "message", T: () => SequenceNumber },
            { no: 19, name: "block_energy_limit", kind: "message", T: () => SequenceNumber },
            { no: 20, name: "finalization_committee_parameters", kind: "message", T: () => SequenceNumber }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.NextUpdateSequenceNumbers
 */
export const NextUpdateSequenceNumbers = new NextUpdateSequenceNumbers$Type();
// @generated message type with reflection information, may provide speed optimized methods
class IpAddress$Type extends MessageType {
    constructor() {
        super("concordium.v2.IpAddress", [
            { no: 1, name: "value", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.IpAddress
 */
export const IpAddress = new IpAddress$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Port$Type extends MessageType {
    constructor() {
        super("concordium.v2.Port", [
            { no: 1, name: "value", kind: "scalar", T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.Port
 */
export const Port = new Port$Type();
// @generated message type with reflection information, may provide speed optimized methods
class IpSocketAddress$Type extends MessageType {
    constructor() {
        super("concordium.v2.IpSocketAddress", [
            { no: 1, name: "ip", kind: "message", T: () => IpAddress },
            { no: 2, name: "port", kind: "message", T: () => Port }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.IpSocketAddress
 */
export const IpSocketAddress = new IpSocketAddress$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PeerId$Type extends MessageType {
    constructor() {
        super("concordium.v2.PeerId", [
            { no: 1, name: "value", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.PeerId
 */
export const PeerId = new PeerId$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BannedPeer$Type extends MessageType {
    constructor() {
        super("concordium.v2.BannedPeer", [
            { no: 1, name: "ip_address", kind: "message", T: () => IpAddress }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.BannedPeer
 */
export const BannedPeer = new BannedPeer$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BannedPeers$Type extends MessageType {
    constructor() {
        super("concordium.v2.BannedPeers", [
            { no: 1, name: "peers", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => BannedPeer }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.BannedPeers
 */
export const BannedPeers = new BannedPeers$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PeerToBan$Type extends MessageType {
    constructor() {
        super("concordium.v2.PeerToBan", [
            { no: 1, name: "ip_address", kind: "message", T: () => IpAddress }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.PeerToBan
 */
export const PeerToBan = new PeerToBan$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DumpRequest$Type extends MessageType {
    constructor() {
        super("concordium.v2.DumpRequest", [
            { no: 1, name: "file", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "raw", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.DumpRequest
 */
export const DumpRequest = new DumpRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PeersInfo$Type extends MessageType {
    constructor() {
        super("concordium.v2.PeersInfo", [
            { no: 1, name: "peers", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => PeersInfo_Peer }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.PeersInfo
 */
export const PeersInfo = new PeersInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PeersInfo_Peer$Type extends MessageType {
    constructor() {
        super("concordium.v2.PeersInfo.Peer", [
            { no: 1, name: "peer_id", kind: "message", T: () => PeerId },
            { no: 2, name: "socket_address", kind: "message", T: () => IpSocketAddress },
            { no: 3, name: "network_stats", kind: "message", T: () => PeersInfo_Peer_NetworkStats },
            { no: 4, name: "bootstrapper", kind: "message", oneof: "consensusInfo", T: () => Empty },
            { no: 5, name: "node_catchup_status", kind: "enum", oneof: "consensusInfo", T: () => ["concordium.v2.PeersInfo.Peer.CatchupStatus", PeersInfo_Peer_CatchupStatus] }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.PeersInfo.Peer
 */
export const PeersInfo_Peer = new PeersInfo_Peer$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PeersInfo_Peer_NetworkStats$Type extends MessageType {
    constructor() {
        super("concordium.v2.PeersInfo.Peer.NetworkStats", [
            { no: 2, name: "packets_sent", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 3, name: "packets_received", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 4, name: "latency", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.PeersInfo.Peer.NetworkStats
 */
export const PeersInfo_Peer_NetworkStats = new PeersInfo_Peer_NetworkStats$Type();
// @generated message type with reflection information, may provide speed optimized methods
class NodeInfo$Type extends MessageType {
    constructor() {
        super("concordium.v2.NodeInfo", [
            { no: 1, name: "peer_version", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "local_time", kind: "message", T: () => Timestamp },
            { no: 4, name: "peer_uptime", kind: "message", T: () => Duration },
            { no: 5, name: "network_info", kind: "message", T: () => NodeInfo_NetworkInfo },
            { no: 6, name: "bootstrapper", kind: "message", oneof: "details", T: () => Empty },
            { no: 7, name: "node", kind: "message", oneof: "details", T: () => NodeInfo_Node }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.NodeInfo
 */
export const NodeInfo = new NodeInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class NodeInfo_NetworkInfo$Type extends MessageType {
    constructor() {
        super("concordium.v2.NodeInfo.NetworkInfo", [
            { no: 1, name: "node_id", kind: "message", T: () => PeerId },
            { no: 2, name: "peer_total_sent", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 3, name: "peer_total_received", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 4, name: "avg_bps_in", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 5, name: "avg_bps_out", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.NodeInfo.NetworkInfo
 */
export const NodeInfo_NetworkInfo = new NodeInfo_NetworkInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class NodeInfo_BakerConsensusInfo$Type extends MessageType {
    constructor() {
        super("concordium.v2.NodeInfo.BakerConsensusInfo", [
            { no: 1, name: "baker_id", kind: "message", T: () => BakerId },
            { no: 2, name: "passive_committee_info", kind: "enum", oneof: "status", T: () => ["concordium.v2.NodeInfo.BakerConsensusInfo.PassiveCommitteeInfo", NodeInfo_BakerConsensusInfo_PassiveCommitteeInfo] },
            { no: 3, name: "active_baker_committee_info", kind: "message", oneof: "status", T: () => NodeInfo_BakerConsensusInfo_ActiveBakerCommitteeInfo },
            { no: 4, name: "active_finalizer_committee_info", kind: "message", oneof: "status", T: () => NodeInfo_BakerConsensusInfo_ActiveFinalizerCommitteeInfo }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.NodeInfo.BakerConsensusInfo
 */
export const NodeInfo_BakerConsensusInfo = new NodeInfo_BakerConsensusInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class NodeInfo_BakerConsensusInfo_ActiveBakerCommitteeInfo$Type extends MessageType {
    constructor() {
        super("concordium.v2.NodeInfo.BakerConsensusInfo.ActiveBakerCommitteeInfo", []);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.NodeInfo.BakerConsensusInfo.ActiveBakerCommitteeInfo
 */
export const NodeInfo_BakerConsensusInfo_ActiveBakerCommitteeInfo = new NodeInfo_BakerConsensusInfo_ActiveBakerCommitteeInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class NodeInfo_BakerConsensusInfo_ActiveFinalizerCommitteeInfo$Type extends MessageType {
    constructor() {
        super("concordium.v2.NodeInfo.BakerConsensusInfo.ActiveFinalizerCommitteeInfo", []);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.NodeInfo.BakerConsensusInfo.ActiveFinalizerCommitteeInfo
 */
export const NodeInfo_BakerConsensusInfo_ActiveFinalizerCommitteeInfo = new NodeInfo_BakerConsensusInfo_ActiveFinalizerCommitteeInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class NodeInfo_Node$Type extends MessageType {
    constructor() {
        super("concordium.v2.NodeInfo.Node", [
            { no: 1, name: "not_running", kind: "message", oneof: "consensusStatus", T: () => Empty },
            { no: 2, name: "passive", kind: "message", oneof: "consensusStatus", T: () => Empty },
            { no: 3, name: "active", kind: "message", oneof: "consensusStatus", T: () => NodeInfo_BakerConsensusInfo }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.NodeInfo.Node
 */
export const NodeInfo_Node = new NodeInfo_Node$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SendBlockItemRequest$Type extends MessageType {
    constructor() {
        super("concordium.v2.SendBlockItemRequest", [
            { no: 1, name: "account_transaction", kind: "message", oneof: "blockItem", T: () => AccountTransaction },
            { no: 2, name: "credential_deployment", kind: "message", oneof: "blockItem", T: () => CredentialDeployment },
            { no: 3, name: "update_instruction", kind: "message", oneof: "blockItem", T: () => UpdateInstruction }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.SendBlockItemRequest
 */
export const SendBlockItemRequest = new SendBlockItemRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CredentialDeployment$Type extends MessageType {
    constructor() {
        super("concordium.v2.CredentialDeployment", [
            { no: 1, name: "message_expiry", kind: "message", T: () => TransactionTime },
            { no: 2, name: "raw_payload", kind: "scalar", oneof: "payload", T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.CredentialDeployment
 */
export const CredentialDeployment = new CredentialDeployment$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Signature$Type extends MessageType {
    constructor() {
        super("concordium.v2.Signature", [
            { no: 1, name: "value", kind: "scalar", T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.Signature
 */
export const Signature = new Signature$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SignatureMap$Type extends MessageType {
    constructor() {
        super("concordium.v2.SignatureMap", [
            { no: 1, name: "signatures", kind: "map", K: 13 /*ScalarType.UINT32*/, V: { kind: "message", T: () => Signature } }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.SignatureMap
 */
export const SignatureMap = new SignatureMap$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AccountSignatureMap$Type extends MessageType {
    constructor() {
        super("concordium.v2.AccountSignatureMap", [
            { no: 1, name: "signatures", kind: "map", K: 13 /*ScalarType.UINT32*/, V: { kind: "message", T: () => Signature } }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.AccountSignatureMap
 */
export const AccountSignatureMap = new AccountSignatureMap$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AccountTransactionSignature$Type extends MessageType {
    constructor() {
        super("concordium.v2.AccountTransactionSignature", [
            { no: 1, name: "signatures", kind: "map", K: 13 /*ScalarType.UINT32*/, V: { kind: "message", T: () => AccountSignatureMap } }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.AccountTransactionSignature
 */
export const AccountTransactionSignature = new AccountTransactionSignature$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AccountTransactionHeader$Type extends MessageType {
    constructor() {
        super("concordium.v2.AccountTransactionHeader", [
            { no: 1, name: "sender", kind: "message", T: () => AccountAddress },
            { no: 2, name: "sequence_number", kind: "message", T: () => SequenceNumber },
            { no: 3, name: "energy_amount", kind: "message", T: () => Energy },
            { no: 5, name: "expiry", kind: "message", T: () => TransactionTime }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.AccountTransactionHeader
 */
export const AccountTransactionHeader = new AccountTransactionHeader$Type();
// @generated message type with reflection information, may provide speed optimized methods
class InitContractPayload$Type extends MessageType {
    constructor() {
        super("concordium.v2.InitContractPayload", [
            { no: 1, name: "amount", kind: "message", T: () => Amount },
            { no: 2, name: "module_ref", kind: "message", T: () => ModuleRef },
            { no: 3, name: "init_name", kind: "message", T: () => InitName },
            { no: 4, name: "parameter", kind: "message", T: () => Parameter }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.InitContractPayload
 */
export const InitContractPayload = new InitContractPayload$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UpdateContractPayload$Type extends MessageType {
    constructor() {
        super("concordium.v2.UpdateContractPayload", [
            { no: 1, name: "amount", kind: "message", T: () => Amount },
            { no: 2, name: "address", kind: "message", T: () => ContractAddress },
            { no: 3, name: "receive_name", kind: "message", T: () => ReceiveName },
            { no: 4, name: "parameter", kind: "message", T: () => Parameter }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.UpdateContractPayload
 */
export const UpdateContractPayload = new UpdateContractPayload$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TransferPayload$Type extends MessageType {
    constructor() {
        super("concordium.v2.TransferPayload", [
            { no: 1, name: "amount", kind: "message", T: () => Amount },
            { no: 2, name: "receiver", kind: "message", T: () => AccountAddress }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.TransferPayload
 */
export const TransferPayload = new TransferPayload$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TransferWithMemoPayload$Type extends MessageType {
    constructor() {
        super("concordium.v2.TransferWithMemoPayload", [
            { no: 1, name: "amount", kind: "message", T: () => Amount },
            { no: 2, name: "receiver", kind: "message", T: () => AccountAddress },
            { no: 3, name: "memo", kind: "message", T: () => Memo }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.TransferWithMemoPayload
 */
export const TransferWithMemoPayload = new TransferWithMemoPayload$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AccountTransactionPayload$Type extends MessageType {
    constructor() {
        super("concordium.v2.AccountTransactionPayload", [
            { no: 1, name: "raw_payload", kind: "scalar", oneof: "payload", T: 12 /*ScalarType.BYTES*/ },
            { no: 2, name: "deploy_module", kind: "message", oneof: "payload", T: () => VersionedModuleSource },
            { no: 3, name: "init_contract", kind: "message", oneof: "payload", T: () => InitContractPayload },
            { no: 4, name: "update_contract", kind: "message", oneof: "payload", T: () => UpdateContractPayload },
            { no: 5, name: "transfer", kind: "message", oneof: "payload", T: () => TransferPayload },
            { no: 6, name: "transfer_with_memo", kind: "message", oneof: "payload", T: () => TransferWithMemoPayload },
            { no: 7, name: "register_data", kind: "message", oneof: "payload", T: () => RegisteredData }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.AccountTransactionPayload
 */
export const AccountTransactionPayload = new AccountTransactionPayload$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PreAccountTransaction$Type extends MessageType {
    constructor() {
        super("concordium.v2.PreAccountTransaction", [
            { no: 1, name: "header", kind: "message", T: () => AccountTransactionHeader },
            { no: 2, name: "payload", kind: "message", T: () => AccountTransactionPayload }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.PreAccountTransaction
 */
export const PreAccountTransaction = new PreAccountTransaction$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AccountTransaction$Type extends MessageType {
    constructor() {
        super("concordium.v2.AccountTransaction", [
            { no: 1, name: "signature", kind: "message", T: () => AccountTransactionSignature },
            { no: 2, name: "header", kind: "message", T: () => AccountTransactionHeader },
            { no: 3, name: "payload", kind: "message", T: () => AccountTransactionPayload }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.AccountTransaction
 */
export const AccountTransaction = new AccountTransaction$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UpdateInstructionHeader$Type extends MessageType {
    constructor() {
        super("concordium.v2.UpdateInstructionHeader", [
            { no: 1, name: "sequence_number", kind: "message", T: () => UpdateSequenceNumber },
            { no: 2, name: "effective_time", kind: "message", T: () => TransactionTime },
            { no: 3, name: "timeout", kind: "message", T: () => TransactionTime }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.UpdateInstructionHeader
 */
export const UpdateInstructionHeader = new UpdateInstructionHeader$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UpdateInstructionPayload$Type extends MessageType {
    constructor() {
        super("concordium.v2.UpdateInstructionPayload", [
            { no: 3, name: "raw_payload", kind: "scalar", oneof: "payload", T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.UpdateInstructionPayload
 */
export const UpdateInstructionPayload = new UpdateInstructionPayload$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UpdateInstruction$Type extends MessageType {
    constructor() {
        super("concordium.v2.UpdateInstruction", [
            { no: 1, name: "signatures", kind: "message", T: () => SignatureMap },
            { no: 2, name: "header", kind: "message", T: () => UpdateInstructionHeader },
            { no: 3, name: "payload", kind: "message", T: () => UpdateInstructionPayload }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.UpdateInstruction
 */
export const UpdateInstruction = new UpdateInstruction$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AccountTransactionSignHash$Type extends MessageType {
    constructor() {
        super("concordium.v2.AccountTransactionSignHash", [
            { no: 1, name: "value", kind: "scalar", T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.AccountTransactionSignHash
 */
export const AccountTransactionSignHash = new AccountTransactionSignHash$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CredentialsPerBlockLimit$Type extends MessageType {
    constructor() {
        super("concordium.v2.CredentialsPerBlockLimit", [
            { no: 1, name: "value", kind: "scalar", T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.CredentialsPerBlockLimit
 */
export const CredentialsPerBlockLimit = new CredentialsPerBlockLimit$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ChainParametersV0$Type extends MessageType {
    constructor() {
        super("concordium.v2.ChainParametersV0", [
            { no: 1, name: "election_difficulty", kind: "message", T: () => ElectionDifficulty },
            { no: 2, name: "euro_per_energy", kind: "message", T: () => ExchangeRate },
            { no: 3, name: "micro_ccd_per_euro", kind: "message", T: () => ExchangeRate },
            { no: 4, name: "baker_cooldown_epochs", kind: "message", T: () => Epoch },
            { no: 5, name: "account_creation_limit", kind: "message", T: () => CredentialsPerBlockLimit },
            { no: 6, name: "mint_distribution", kind: "message", T: () => MintDistributionCpv0 },
            { no: 7, name: "transaction_fee_distribution", kind: "message", T: () => TransactionFeeDistribution },
            { no: 8, name: "gas_rewards", kind: "message", T: () => GasRewards },
            { no: 9, name: "foundation_account", kind: "message", T: () => AccountAddress },
            { no: 10, name: "minimum_threshold_for_baking", kind: "message", T: () => Amount },
            { no: 11, name: "root_keys", kind: "message", T: () => HigherLevelKeys },
            { no: 12, name: "level1_keys", kind: "message", T: () => HigherLevelKeys },
            { no: 13, name: "level2_keys", kind: "message", T: () => AuthorizationsV0 }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.ChainParametersV0
 */
export const ChainParametersV0 = new ChainParametersV0$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ChainParametersV1$Type extends MessageType {
    constructor() {
        super("concordium.v2.ChainParametersV1", [
            { no: 1, name: "election_difficulty", kind: "message", T: () => ElectionDifficulty },
            { no: 2, name: "euro_per_energy", kind: "message", T: () => ExchangeRate },
            { no: 3, name: "micro_ccd_per_euro", kind: "message", T: () => ExchangeRate },
            { no: 4, name: "cooldown_parameters", kind: "message", T: () => CooldownParametersCpv1 },
            { no: 5, name: "time_parameters", kind: "message", T: () => TimeParametersCpv1 },
            { no: 6, name: "account_creation_limit", kind: "message", T: () => CredentialsPerBlockLimit },
            { no: 7, name: "mint_distribution", kind: "message", T: () => MintDistributionCpv1 },
            { no: 8, name: "transaction_fee_distribution", kind: "message", T: () => TransactionFeeDistribution },
            { no: 9, name: "gas_rewards", kind: "message", T: () => GasRewards },
            { no: 10, name: "foundation_account", kind: "message", T: () => AccountAddress },
            { no: 11, name: "pool_parameters", kind: "message", T: () => PoolParametersCpv1 },
            { no: 12, name: "root_keys", kind: "message", T: () => HigherLevelKeys },
            { no: 13, name: "level1_keys", kind: "message", T: () => HigherLevelKeys },
            { no: 14, name: "level2_keys", kind: "message", T: () => AuthorizationsV1 }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.ChainParametersV1
 */
export const ChainParametersV1 = new ChainParametersV1$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ChainParametersV2$Type extends MessageType {
    constructor() {
        super("concordium.v2.ChainParametersV2", [
            { no: 1, name: "consensus_parameters", kind: "message", T: () => ConsensusParametersV1 },
            { no: 2, name: "euro_per_energy", kind: "message", T: () => ExchangeRate },
            { no: 3, name: "micro_ccd_per_euro", kind: "message", T: () => ExchangeRate },
            { no: 4, name: "cooldown_parameters", kind: "message", T: () => CooldownParametersCpv1 },
            { no: 5, name: "time_parameters", kind: "message", T: () => TimeParametersCpv1 },
            { no: 6, name: "account_creation_limit", kind: "message", T: () => CredentialsPerBlockLimit },
            { no: 7, name: "mint_distribution", kind: "message", T: () => MintDistributionCpv1 },
            { no: 8, name: "transaction_fee_distribution", kind: "message", T: () => TransactionFeeDistribution },
            { no: 9, name: "gas_rewards", kind: "message", T: () => GasRewardsCpv2 },
            { no: 10, name: "foundation_account", kind: "message", T: () => AccountAddress },
            { no: 11, name: "pool_parameters", kind: "message", T: () => PoolParametersCpv1 },
            { no: 12, name: "root_keys", kind: "message", T: () => HigherLevelKeys },
            { no: 13, name: "level1_keys", kind: "message", T: () => HigherLevelKeys },
            { no: 14, name: "level2_keys", kind: "message", T: () => AuthorizationsV1 },
            { no: 15, name: "finalization_committee_parameters", kind: "message", T: () => FinalizationCommitteeParameters }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.ChainParametersV2
 */
export const ChainParametersV2 = new ChainParametersV2$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ChainParameters$Type extends MessageType {
    constructor() {
        super("concordium.v2.ChainParameters", [
            { no: 1, name: "v0", kind: "message", oneof: "parameters", T: () => ChainParametersV0 },
            { no: 2, name: "v1", kind: "message", oneof: "parameters", T: () => ChainParametersV1 },
            { no: 3, name: "v2", kind: "message", oneof: "parameters", T: () => ChainParametersV2 }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.ChainParameters
 */
export const ChainParameters = new ChainParameters$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FinalizationSummaryParty$Type extends MessageType {
    constructor() {
        super("concordium.v2.FinalizationSummaryParty", [
            { no: 1, name: "baker", kind: "message", T: () => BakerId },
            { no: 2, name: "weight", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 3, name: "signed", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.FinalizationSummaryParty
 */
export const FinalizationSummaryParty = new FinalizationSummaryParty$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FinalizationIndex$Type extends MessageType {
    constructor() {
        super("concordium.v2.FinalizationIndex", [
            { no: 1, name: "value", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.FinalizationIndex
 */
export const FinalizationIndex = new FinalizationIndex$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FinalizationSummary$Type extends MessageType {
    constructor() {
        super("concordium.v2.FinalizationSummary", [
            { no: 1, name: "block", kind: "message", T: () => BlockHash },
            { no: 2, name: "index", kind: "message", T: () => FinalizationIndex },
            { no: 3, name: "delay", kind: "message", T: () => BlockHeight },
            { no: 4, name: "finalizers", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => FinalizationSummaryParty }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.FinalizationSummary
 */
export const FinalizationSummary = new FinalizationSummary$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BlockFinalizationSummary$Type extends MessageType {
    constructor() {
        super("concordium.v2.BlockFinalizationSummary", [
            { no: 1, name: "none", kind: "message", oneof: "summary", T: () => Empty },
            { no: 2, name: "record", kind: "message", oneof: "summary", T: () => FinalizationSummary }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.BlockFinalizationSummary
 */
export const BlockFinalizationSummary = new BlockFinalizationSummary$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BlockItem$Type extends MessageType {
    constructor() {
        super("concordium.v2.BlockItem", [
            { no: 1, name: "hash", kind: "message", T: () => TransactionHash },
            { no: 2, name: "account_transaction", kind: "message", oneof: "blockItem", T: () => AccountTransaction },
            { no: 3, name: "credential_deployment", kind: "message", oneof: "blockItem", T: () => CredentialDeployment },
            { no: 4, name: "update_instruction", kind: "message", oneof: "blockItem", T: () => UpdateInstruction }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.BlockItem
 */
export const BlockItem = new BlockItem$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BakerRewardPeriodInfo$Type extends MessageType {
    constructor() {
        super("concordium.v2.BakerRewardPeriodInfo", [
            { no: 1, name: "baker", kind: "message", T: () => BakerInfo },
            { no: 2, name: "effective_stake", kind: "message", T: () => Amount },
            { no: 3, name: "commission_rates", kind: "message", T: () => CommissionRates },
            { no: 4, name: "equity_capital", kind: "message", T: () => Amount },
            { no: 5, name: "delegated_capital", kind: "message", T: () => Amount },
            { no: 6, name: "is_finalizer", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.BakerRewardPeriodInfo
 */
export const BakerRewardPeriodInfo = new BakerRewardPeriodInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QuorumSignature$Type extends MessageType {
    constructor() {
        super("concordium.v2.QuorumSignature", [
            { no: 1, name: "value", kind: "scalar", T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.QuorumSignature
 */
export const QuorumSignature = new QuorumSignature$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QuorumCertificate$Type extends MessageType {
    constructor() {
        super("concordium.v2.QuorumCertificate", [
            { no: 1, name: "block_hash", kind: "message", T: () => BlockHash },
            { no: 2, name: "round", kind: "message", T: () => Round },
            { no: 3, name: "epoch", kind: "message", T: () => Epoch },
            { no: 4, name: "aggregate_signature", kind: "message", T: () => QuorumSignature },
            { no: 5, name: "signatories", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => BakerId }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.QuorumCertificate
 */
export const QuorumCertificate = new QuorumCertificate$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FinalizerRound$Type extends MessageType {
    constructor() {
        super("concordium.v2.FinalizerRound", [
            { no: 1, name: "round", kind: "message", T: () => Round },
            { no: 2, name: "finalizers", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => BakerId }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.FinalizerRound
 */
export const FinalizerRound = new FinalizerRound$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TimeoutSignature$Type extends MessageType {
    constructor() {
        super("concordium.v2.TimeoutSignature", [
            { no: 1, name: "value", kind: "scalar", T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.TimeoutSignature
 */
export const TimeoutSignature = new TimeoutSignature$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TimeoutCertificate$Type extends MessageType {
    constructor() {
        super("concordium.v2.TimeoutCertificate", [
            { no: 1, name: "round", kind: "message", T: () => Round },
            { no: 2, name: "min_epoch", kind: "message", T: () => Epoch },
            { no: 3, name: "qc_rounds_first_epoch", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => FinalizerRound },
            { no: 4, name: "qc_rounds_second_epoch", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => FinalizerRound },
            { no: 5, name: "aggregate_signature", kind: "message", T: () => TimeoutSignature }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.TimeoutCertificate
 */
export const TimeoutCertificate = new TimeoutCertificate$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SuccessorProof$Type extends MessageType {
    constructor() {
        super("concordium.v2.SuccessorProof", [
            { no: 1, name: "value", kind: "scalar", T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.SuccessorProof
 */
export const SuccessorProof = new SuccessorProof$Type();
// @generated message type with reflection information, may provide speed optimized methods
class EpochFinalizationEntry$Type extends MessageType {
    constructor() {
        super("concordium.v2.EpochFinalizationEntry", [
            { no: 1, name: "finalized_qc", kind: "message", T: () => QuorumCertificate },
            { no: 2, name: "successor_qc", kind: "message", T: () => QuorumCertificate },
            { no: 3, name: "successor_proof", kind: "message", T: () => SuccessorProof }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.EpochFinalizationEntry
 */
export const EpochFinalizationEntry = new EpochFinalizationEntry$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BlockCertificates$Type extends MessageType {
    constructor() {
        super("concordium.v2.BlockCertificates", [
            { no: 1, name: "quorum_certificate", kind: "message", T: () => QuorumCertificate },
            { no: 2, name: "timeout_certificate", kind: "message", T: () => TimeoutCertificate },
            { no: 3, name: "epoch_finalization_entry", kind: "message", T: () => EpochFinalizationEntry }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.BlockCertificates
 */
export const BlockCertificates = new BlockCertificates$Type();
// @generated message type with reflection information, may provide speed optimized methods
class WinningBaker$Type extends MessageType {
    constructor() {
        super("concordium.v2.WinningBaker", [
            { no: 1, name: "round", kind: "message", T: () => Round },
            { no: 2, name: "winner", kind: "message", T: () => BakerId },
            { no: 3, name: "present", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.WinningBaker
 */
export const WinningBaker = new WinningBaker$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DryRunRequest$Type extends MessageType {
    constructor() {
        super("concordium.v2.DryRunRequest", [
            { no: 1, name: "load_block_state", kind: "message", oneof: "request", T: () => BlockHashInput },
            { no: 2, name: "state_query", kind: "message", oneof: "request", T: () => DryRunStateQuery },
            { no: 3, name: "state_operation", kind: "message", oneof: "request", T: () => DryRunStateOperation }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.DryRunRequest
 */
export const DryRunRequest = new DryRunRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DryRunStateQuery$Type extends MessageType {
    constructor() {
        super("concordium.v2.DryRunStateQuery", [
            { no: 1, name: "get_account_info", kind: "message", oneof: "query", T: () => AccountIdentifierInput },
            { no: 2, name: "get_instance_info", kind: "message", oneof: "query", T: () => ContractAddress },
            { no: 3, name: "invoke_instance", kind: "message", oneof: "query", T: () => DryRunInvokeInstance }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.DryRunStateQuery
 */
export const DryRunStateQuery = new DryRunStateQuery$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DryRunInvokeInstance$Type extends MessageType {
    constructor() {
        super("concordium.v2.DryRunInvokeInstance", [
            { no: 1, name: "invoker", kind: "message", T: () => Address },
            { no: 2, name: "instance", kind: "message", T: () => ContractAddress },
            { no: 3, name: "amount", kind: "message", T: () => Amount },
            { no: 4, name: "entrypoint", kind: "message", T: () => ReceiveName },
            { no: 5, name: "parameter", kind: "message", T: () => Parameter },
            { no: 6, name: "energy", kind: "message", T: () => Energy }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.DryRunInvokeInstance
 */
export const DryRunInvokeInstance = new DryRunInvokeInstance$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DryRunStateOperation$Type extends MessageType {
    constructor() {
        super("concordium.v2.DryRunStateOperation", [
            { no: 1, name: "set_timestamp", kind: "message", oneof: "operation", T: () => Timestamp },
            { no: 2, name: "mint_to_account", kind: "message", oneof: "operation", T: () => DryRunMintToAccount },
            { no: 3, name: "run_transaction", kind: "message", oneof: "operation", T: () => DryRunTransaction }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.DryRunStateOperation
 */
export const DryRunStateOperation = new DryRunStateOperation$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DryRunMintToAccount$Type extends MessageType {
    constructor() {
        super("concordium.v2.DryRunMintToAccount", [
            { no: 1, name: "account", kind: "message", T: () => AccountAddress },
            { no: 2, name: "amount", kind: "message", T: () => Amount }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.DryRunMintToAccount
 */
export const DryRunMintToAccount = new DryRunMintToAccount$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DryRunTransaction$Type extends MessageType {
    constructor() {
        super("concordium.v2.DryRunTransaction", [
            { no: 1, name: "sender", kind: "message", T: () => AccountAddress },
            { no: 2, name: "energy_amount", kind: "message", T: () => Energy },
            { no: 3, name: "payload", kind: "message", T: () => AccountTransactionPayload },
            { no: 4, name: "signatures", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => DryRunSignature }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.DryRunTransaction
 */
export const DryRunTransaction = new DryRunTransaction$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DryRunSignature$Type extends MessageType {
    constructor() {
        super("concordium.v2.DryRunSignature", [
            { no: 1, name: "credential", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 2, name: "key", kind: "scalar", T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.DryRunSignature
 */
export const DryRunSignature = new DryRunSignature$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DryRunResponse$Type extends MessageType {
    constructor() {
        super("concordium.v2.DryRunResponse", [
            { no: 1, name: "error", kind: "message", oneof: "response", T: () => DryRunErrorResponse },
            { no: 2, name: "success", kind: "message", oneof: "response", T: () => DryRunSuccessResponse },
            { no: 3, name: "quota_remaining", kind: "message", T: () => Energy }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.DryRunResponse
 */
export const DryRunResponse = new DryRunResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DryRunErrorResponse$Type extends MessageType {
    constructor() {
        super("concordium.v2.DryRunErrorResponse", [
            { no: 1, name: "no_state", kind: "message", oneof: "error", T: () => DryRunErrorResponse_NoState },
            { no: 2, name: "block_not_found", kind: "message", oneof: "error", T: () => DryRunErrorResponse_BlockNotFound },
            { no: 3, name: "account_not_found", kind: "message", oneof: "error", T: () => DryRunErrorResponse_AccountNotFound },
            { no: 4, name: "instance_not_found", kind: "message", oneof: "error", T: () => DryRunErrorResponse_InstanceNotFound },
            { no: 5, name: "amount_over_limit", kind: "message", oneof: "error", T: () => DryRunErrorResponse_AmountOverLimit },
            { no: 6, name: "balance_insufficient", kind: "message", oneof: "error", T: () => DryRunErrorResponse_BalanceInsufficient },
            { no: 8, name: "energy_insufficient", kind: "message", oneof: "error", T: () => DryRunErrorResponse_EnergyInsufficient },
            { no: 9, name: "invoke_failed", kind: "message", oneof: "error", T: () => DryRunErrorResponse_InvokeFailure }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.DryRunErrorResponse
 */
export const DryRunErrorResponse = new DryRunErrorResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DryRunErrorResponse_NoState$Type extends MessageType {
    constructor() {
        super("concordium.v2.DryRunErrorResponse.NoState", []);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.DryRunErrorResponse.NoState
 */
export const DryRunErrorResponse_NoState = new DryRunErrorResponse_NoState$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DryRunErrorResponse_BlockNotFound$Type extends MessageType {
    constructor() {
        super("concordium.v2.DryRunErrorResponse.BlockNotFound", []);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.DryRunErrorResponse.BlockNotFound
 */
export const DryRunErrorResponse_BlockNotFound = new DryRunErrorResponse_BlockNotFound$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DryRunErrorResponse_AccountNotFound$Type extends MessageType {
    constructor() {
        super("concordium.v2.DryRunErrorResponse.AccountNotFound", []);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.DryRunErrorResponse.AccountNotFound
 */
export const DryRunErrorResponse_AccountNotFound = new DryRunErrorResponse_AccountNotFound$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DryRunErrorResponse_InstanceNotFound$Type extends MessageType {
    constructor() {
        super("concordium.v2.DryRunErrorResponse.InstanceNotFound", []);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.DryRunErrorResponse.InstanceNotFound
 */
export const DryRunErrorResponse_InstanceNotFound = new DryRunErrorResponse_InstanceNotFound$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DryRunErrorResponse_AmountOverLimit$Type extends MessageType {
    constructor() {
        super("concordium.v2.DryRunErrorResponse.AmountOverLimit", [
            { no: 1, name: "amount_limit", kind: "message", T: () => Amount }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.DryRunErrorResponse.AmountOverLimit
 */
export const DryRunErrorResponse_AmountOverLimit = new DryRunErrorResponse_AmountOverLimit$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DryRunErrorResponse_BalanceInsufficient$Type extends MessageType {
    constructor() {
        super("concordium.v2.DryRunErrorResponse.BalanceInsufficient", [
            { no: 1, name: "required_amount", kind: "message", T: () => Amount },
            { no: 2, name: "available_amount", kind: "message", T: () => Amount }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.DryRunErrorResponse.BalanceInsufficient
 */
export const DryRunErrorResponse_BalanceInsufficient = new DryRunErrorResponse_BalanceInsufficient$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DryRunErrorResponse_EnergyInsufficient$Type extends MessageType {
    constructor() {
        super("concordium.v2.DryRunErrorResponse.EnergyInsufficient", [
            { no: 1, name: "energy_required", kind: "message", T: () => Energy }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.DryRunErrorResponse.EnergyInsufficient
 */
export const DryRunErrorResponse_EnergyInsufficient = new DryRunErrorResponse_EnergyInsufficient$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DryRunErrorResponse_InvokeFailure$Type extends MessageType {
    constructor() {
        super("concordium.v2.DryRunErrorResponse.InvokeFailure", [
            { no: 1, name: "return_value", kind: "scalar", opt: true, T: 12 /*ScalarType.BYTES*/ },
            { no: 2, name: "used_energy", kind: "message", T: () => Energy },
            { no: 3, name: "reason", kind: "message", T: () => RejectReason }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.DryRunErrorResponse.InvokeFailure
 */
export const DryRunErrorResponse_InvokeFailure = new DryRunErrorResponse_InvokeFailure$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DryRunSuccessResponse$Type extends MessageType {
    constructor() {
        super("concordium.v2.DryRunSuccessResponse", [
            { no: 1, name: "block_state_loaded", kind: "message", oneof: "response", T: () => DryRunSuccessResponse_BlockStateLoaded },
            { no: 2, name: "account_info", kind: "message", oneof: "response", T: () => AccountInfo },
            { no: 3, name: "instance_info", kind: "message", oneof: "response", T: () => InstanceInfo },
            { no: 4, name: "invoke_succeeded", kind: "message", oneof: "response", T: () => DryRunSuccessResponse_InvokeSuccess },
            { no: 5, name: "timestamp_set", kind: "message", oneof: "response", T: () => DryRunSuccessResponse_TimestampSet },
            { no: 6, name: "minted_to_account", kind: "message", oneof: "response", T: () => DryRunSuccessResponse_MintedToAccount },
            { no: 7, name: "transaction_executed", kind: "message", oneof: "response", T: () => DryRunSuccessResponse_TransactionExecuted }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.DryRunSuccessResponse
 */
export const DryRunSuccessResponse = new DryRunSuccessResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DryRunSuccessResponse_BlockStateLoaded$Type extends MessageType {
    constructor() {
        super("concordium.v2.DryRunSuccessResponse.BlockStateLoaded", [
            { no: 1, name: "current_timestamp", kind: "message", T: () => Timestamp },
            { no: 2, name: "block_hash", kind: "message", T: () => BlockHash },
            { no: 3, name: "protocol_version", kind: "enum", T: () => ["concordium.v2.ProtocolVersion", ProtocolVersion] }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.DryRunSuccessResponse.BlockStateLoaded
 */
export const DryRunSuccessResponse_BlockStateLoaded = new DryRunSuccessResponse_BlockStateLoaded$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DryRunSuccessResponse_TimestampSet$Type extends MessageType {
    constructor() {
        super("concordium.v2.DryRunSuccessResponse.TimestampSet", []);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.DryRunSuccessResponse.TimestampSet
 */
export const DryRunSuccessResponse_TimestampSet = new DryRunSuccessResponse_TimestampSet$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DryRunSuccessResponse_MintedToAccount$Type extends MessageType {
    constructor() {
        super("concordium.v2.DryRunSuccessResponse.MintedToAccount", []);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.DryRunSuccessResponse.MintedToAccount
 */
export const DryRunSuccessResponse_MintedToAccount = new DryRunSuccessResponse_MintedToAccount$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DryRunSuccessResponse_TransactionExecuted$Type extends MessageType {
    constructor() {
        super("concordium.v2.DryRunSuccessResponse.TransactionExecuted", [
            { no: 1, name: "energy_cost", kind: "message", T: () => Energy },
            { no: 2, name: "details", kind: "message", T: () => AccountTransactionDetails },
            { no: 3, name: "return_value", kind: "scalar", opt: true, T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.DryRunSuccessResponse.TransactionExecuted
 */
export const DryRunSuccessResponse_TransactionExecuted = new DryRunSuccessResponse_TransactionExecuted$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DryRunSuccessResponse_InvokeSuccess$Type extends MessageType {
    constructor() {
        super("concordium.v2.DryRunSuccessResponse.InvokeSuccess", [
            { no: 1, name: "return_value", kind: "scalar", opt: true, T: 12 /*ScalarType.BYTES*/ },
            { no: 2, name: "used_energy", kind: "message", T: () => Energy },
            { no: 3, name: "effects", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ContractTraceElement }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.DryRunSuccessResponse.InvokeSuccess
 */
export const DryRunSuccessResponse_InvokeSuccess = new DryRunSuccessResponse_InvokeSuccess$Type();
//# sourceMappingURL=types.js.map