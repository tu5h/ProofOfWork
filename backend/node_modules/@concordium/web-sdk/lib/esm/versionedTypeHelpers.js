/**
 * Whether {@link Authorizations} parameter given is of type {@link AuthorizationsV1}
 *
 * @deprecated check the `version` member instead.
 */
export const isAuthorizationsV1 = (as) => as.version === 1;
/**
 * Whether {@link ChainParameters} parameter given is of type {@link ChainParametersV0}
 *
 * @deprecated check the `version` member instead.
 */
export const isChainParametersV0 = (cp) => cp.version === 0;
/**
 * Whether {@link ChainParameters} parameter given is of type {@link ChainParametersV1}
 *
 * @deprecated check the `version` member instead.
 */
export const isChainParametersV1 = (cp) => cp.version === 1;
/**
 * Whether {@link ChainParameters} parameter given is of type {@link ChainParametersV2}
 *
 * @deprecated check the `version` member instead.
 */
export const isChainParametersV2 = (cp) => cp.version === 2;
/**
 * Whether {@link BlockInfo} parameter given is of type {@link BlockInfoV0}
 *
 * @deprecated check the `version` member instead.
 */
export const isBlockInfoV0 = (bi) => bi.version === 0;
/**
 * Whether {@link BlockInfo} parameter given is of type {@link BlockInfoV1}
 *
 * @deprecated check the `version` member instead.
 */
export const isBlockInfoV1 = (bi) => bi.version === 1;
/**
 * Whether {@link ConensusStatus} parameter given is of type {@link ConsensusStatusV0}
 *
 * @deprecated check the `version` member instead.
 */
export const isConsensusStatusV0 = (cs) => cs.version === 0;
/**
 * Whether {@link ConensusStatus} parameter given is of type {@link ConsensusStatusV1}
 *
 * @deprecated check the `version` member instead.
 */
export const isConsensusStatusV1 = (cs) => cs.version === 1;
/**
 * Whether {@link ElectionInfo} parameter given is of type {@link ElectionInfoV0}
 *
 * @deprecated check the `version` member instead.
 */
export const isElectionInfoV0 = (ei) => ei.version === 0;
/**
 * Whether {@link ElectionInfo} parameter given is of type {@link ElectionInfoV1}
 *
 * @deprecated check the `version` member instead.
 */
export const isElectionInfoV1 = (ei) => ei.version === 1;
/**
 * Whether {@link InstanceInfo} parameter given is of type {@link InstanceInfoV1}
 *
 * @deprecated check the `version` member instead.
 */
export const isInstanceInfoV1 = (info) => info.version === 1;
/**
 * Whether {@link InstanceInfo} parameter given is of type {@link InstanceInfoV0}
 *
 * @deprecated check the `version` member instead.
 */
export const isInstanceInfoV0 = (info) => info.version === undefined || info.version === 0;
/**
 * Whether {@link RewardStatus} parameter given is of type {@link RewardStatusV1}
 *
 * @deprecated check the `version` member instead.
 */
export function isRewardStatusV1(rs) {
    return rs.version === 1;
}
//# sourceMappingURL=versionedTypeHelpers.js.map